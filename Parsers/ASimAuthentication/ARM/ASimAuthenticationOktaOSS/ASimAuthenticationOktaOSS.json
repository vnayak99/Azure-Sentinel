{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2017-03-15-preview",
      "name": "[parameters('Workspace')]",
      "location": "[parameters('WorkspaceRegion')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "ASimAuthenticationOktaSSO",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', parameters('Workspace'))]"
          ],
          "properties": {
            "etag": "*",
            "displayName": "Authentication ASIM parser for Okta",
            "category": "ASIM",
            "FunctionAlias": "ASimAuthenticationOktaSSO",
            "query": "let parser=(disabled:bool=false){\n  let OktaSuccessfulOutcome = dynamic(['SUCCESS', 'ALLOW']);\n  let OktaFailedOutcome = dynamic(['FAILURE', 'SKIPPED','DENY']);\n  let OktaSigninEvents=dynamic(['user.session.start', 'user.session.end']);\n  // https://developer.okta.com/docs/reference/api/event-types/#catalog\n  Okta_CL \n  | where not(disabled)\n  | where eventType_s in (OktaSigninEvents)\n  | extend \n      ActingAppType      = \"Browser\",\n      EventCount         = int(1),\n      EventEndTime       = TimeGenerated,\n      EventProduct       = 'Okta',\n      EventResult        = case (outcome_result_s in (OktaSuccessfulOutcome), 'Success',outcome_result_s in (OktaFailedOutcome),'Failure', 'Partial'),\n      EventSchemaVersion = '0.1.0',\n      EventStartTime     = TimeGenerated,\n      EventSubType       = legacyEventType_s,\n      EventType          = iff(eventType_s hassuffix 'start', 'Logon', 'Logoff'),\n      EventVendor        = 'Okta',\n      SrcGeoLatitude     = toreal(client_geographicalContext_geolocation_lat_d),\n      SrcGeoLongitude    = toreal(client_geographicalContext_geolocation_lon_d),\n      TargetUserIdType   = 'OktaId',\n      TargetUsernameType = 'UPN'\n  | project-rename \n      ActingAppName              = client_userAgent_browser_s,\n      EventMessage               = displayMessage_s,\n      EventOriginalResultDetails = outcome_reason_s,\n      EventOriginalUid           = uuid_g,\n      HttpUserAgent              = client_userAgent_rawUserAgent_s,\n      LogonMethod                = authenticationContext_credentialType_s,\n      SrcDvcOs                   = client_userAgent_os_s,\n      SrcGeoCity                 = client_geographicalContext_city_s,\n      SrcGeoCountry              = client_geographicalContext_country_s,\n      SrcIsp                     = securityContext_isp_s,\n      TargetSessionId            = authenticationContext_externalSessionId_s,\n      TargetUserId               = actor_id_s,\n      TargetUsername             = actor_alternateId_s,\n      TargetUserType             = actor_type_s,\n      EventUid                   = _ItemId\n      // ** Aliases\n  | extend \n      Dvc   = EventVendor,\n      User  = TargetUsername\n  | project-away *_s, *_d, *_b, *_g, *_t\n  };\nparser(disabled=disabled)\n",
            "version": 1,
            "functionParameters": "disabled:bool=False"
          }
        }
      ]
    }
  ]
}