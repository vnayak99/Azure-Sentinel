{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
            }
        },
        "workspace-location": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
            }
        },
        "subscription": {
            "defaultValue": "[last(split(subscription().id, '/'))]",
            "type": "string",
            "metadata": {
                "description": "subscription id where Microsoft Sentinel is setup"
            }
        },
        "resourceGroupName": {
            "defaultValue": "[resourceGroup().name]",
            "type": "string",
            "metadata": {
                "description": "resource group name where Microsoft Sentinel is setup"
            }
        },
        "workspace": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
            }
        }
    },
    "variables": {
        "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
        "_solutionName": "OktaSSO solution",
        "_solutionVersion": "3.0.0",
        "_solutionAuthor": "Microsoft",
        "_packageIcon": "icon icon icon icon",
        "_solutionId": "azuresentinel.azure-sentinel-solution-azuresentinel.azure-sentinel-OktaSSO",
        "dataConnectorVersionConnectorDefinition": "1.0.0",
        "dataConnectorVersionConnections": "1.0.0",
        "_solutionTier": "Microsoft",
        "_dataConnectorContentIdConnectorDefinition": "OktaSSOTemplateConnectorDefinition",
        "dataConnectorTemplateNameConnectorDefinition": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnectorDefinition')))]",
        "_dataConnectorContentIdConnections": "OktaSSOTemplateConnections",
        "dataConnectorTemplateNameConnections": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnections')))]",
        "_logAnalyticsTableId1": "OktaSSONativePollerV2_CL"
    },
    "resources": [
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnectorDefinition'), variables('dataConnectorVersionConnectorDefinition'))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "contentId": "[variables('_dataConnectorContentIdConnectorDefinition')]",
                "displayName": "[concat(variables('_solutionName'), variables('dataConnectorTemplateNameConnectorDefinition'))]",
                "contentKind": "DataConnector",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('dataConnectorVersionConnectorDefinition')]",
                    "parameters": {
                        
                    },
                    "variables": {
                        
                    },
                    "resources": [
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition')))]",
                            "apiVersion": "2022-01-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "properties": {
                                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition'))]",
                                "contentId": "[variables('_dataConnectorContentIdConnectorDefinition')]",
                                "kind": "DataConnector",
                                "version": "[variables('dataConnectorVersionConnectorDefinition')]",
                                "source": {
                                    "sourceId": "[variables('_solutionId')]",
                                    "name": "[variables('_solutionName')]",
                                    "kind": "Solution"
                                },
                                "author": {
                                    "name": "[variables('_solutionAuthor')]"
                                },
                                "support": {
                                    "name": "[variables('_solutionAuthor')]",
                                    "tier": "[variables('_solutionTier')]"
                                },
                                "dependencies": {
                                    "criteria": [
                                        {
                                            "version": "[variables('dataConnectorVersionConnections')]",
                                            "contentId": "[variables('_dataConnectorContentIdConnections')]",
                                            "kind": "ResourcesDataConnector"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition'))]",
                            "apiVersion": "2022-09-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
                            "location": "[parameters('workspace-location')]",
                            "kind": "Customizable",
                            "properties": {
                                "connectorUiConfig": {
                                    "title": "Okta Single Sign-On (Preview)",
                                    "publisher": "Microsoft",
                                    "descriptionMarkdown": "The [Okta Single Sign-On (SSO)](https://www.okta.com/products/single-sign-on/) data connector provides the capability to ingest audit and event logs from the Okta Sysem Log API into Microsoft Sentinel. The data connector is built on Microsoft Sentinelג€™s Codeless Connector Platform and uses the Okta System Log API to fetch the events. The connector supports DCR-based [ingestion time transformations](https://docs.microsoft.com/azure/azure-monitor/logs/custom-logs-overview) that parses the received security event data into a custom columns so that queries don't need to parse it again, thus resulting in better performance.",
                                    "graphQueriesTableName": "OktaSSONativePollerV2_CL",
                                    "graphQueries": [
                                        {
                                            "metricName": "Total data received",
                                            "legend": "Okta SSO Events",
                                            "baseQuery": "{{graphQueriesTableName}}"
                                        }
                                    ],
                                    "sampleQueries": [
                                        {
                                            "description": "Get Sample of Okta SSO Events",
                                            "query": "{{graphQueriesTableName}}\n | take 10"
                                        },
                                        {
                                            "description": "Total Events by uuid",
                                            "query": "{{graphQueriesTableName}}\n | summarize count() by OriginalEventUid"
                                        }
                                    ],
                                    "dataTypes": [
                                        {
                                            "name": "{{graphQueriesTableName}}",
                                            "lastDataReceivedQuery": "{{graphQueriesTableName}}|summarize Time = max  (TimeGenerated)\n|where isnotempty(Time)"
                                        }
                                    ],
                                    "connectivityCriteria": [
                                        {
                                            "type": "HasDataConnectors"
                                        }
                                    ],
                                    "availability": {
                                        "isPreview": false
                                    },
                                    "permissions": {
                                        "resourceProvider": [
                                            {
                                                "provider": "Microsoft.OperationalInsights/workspaces",
                                                "permissionsDisplayText": "Read and Write permissions are required.",
                                                "providerDisplayName": "Workspace",
                                                "scope": "Workspace",
                                                "requiredPermissions": {
                                                    "write": true,
                                                    "read": true,
                                                    "delete": true
                                                }
                                            }
                                        ],
                                        "customs": [
                                            {
                                                "name": "Okta API Token",
                                                "description": "An Okta API token. [Follow the following instructions to create an API token](https://developer.okta.com/docs/guides/create-an-api-token/main/).[See the documentation to learn more about Okta System Log API](https://developer.okta.com/docs/reference/api/system-log/)."
                                            }
                                        ]
                                    },
                                    "instructionSteps": [
                                        {
                                            "description": "To enable the Okta Single Sign-On for Microsoft Sentinel, provide the required information below and click on Connect.\n>",
                                            "instructions": [
                                                {
                                                    "type": "DataConnectorsGrid",
                                                    "parameters": {
                                                        "mapping": [
                                                            {
                                                                "columnName": "Endpoint",
                                                                "columnValue": "properties.request.apiEndpoint"
                                                            }
                                                        ],
                                                        "menuItems": [
                                                            "DeleteConnector"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "ContextPane",
                                                    "parameters": {
                                                        "isPrimary": true,
                                                        "label": "Add domain",
                                                        "title": "Add domain",
                                                        "subtitle": "Add domain",
                                                        "contextPaneType": "DataConnectorsContextPane",
                                                        "instructionSteps": [
                                                            {
                                                                "instructions": [
                                                                    {
                                                                        "type": "Textbox",
                                                                        "parameters": {
                                                                            "label": "Okta Domain Name",
                                                                            "placeholder": "Okta Domain Name (e.g., myDomain.okta.com)",
                                                                            "type": "text",
                                                                            "name": "domainname"
                                                                        }
                                                                    },
                                                                    {
                                                                        "type": "Textbox",
                                                                        "parameters": {
                                                                            "label": "API Key",
                                                                            "placeholder": "API Key",
                                                                            "type": "password",
                                                                            "name": "apikey"
                                                                        }
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "OktaDCRV1",
                            "apiVersion": "2021-09-01-preview",
                            "type": "Microsoft.Insights/dataCollectionRules",
                            "location": "[parameters('workspace-location')]",
                            "kind": null,
                            "properties": {
                                "streamDeclarations": {
                                    "Custom-OktaSSO_CL": {
                                        "columns": [
                                            {
                                                "name": "uuid",
                                                "type": "string"
                                            },
                                            {
                                                "name": "published",
                           	                     "type": "datetime"
                                            },
                                            {
                                                "name": "eventType",
                                                "type": "string"
                                            },
                                            {
                                                "name": "version",
                                                "type": "string"
                                            },
                                            {
                                                "name": "severity",
                                                "type": "string"
                                            },
                                            {
                                                "name": "legacyEventType",
                                                "type": "string"
                                            },
                                            {
                                                "name": "displayMessage",
                                                "type": "string"
                                            },
                                            {
                                                "name": "actor",
                                                "type": "dynamic"
                                            },
                                            {
                                                "name": "client",
                                                "type": "dynamic"
                                            },
                                            {
                                                "name": "outcome",
                                                "type": "dynamic"
                                            },
                                            {
                                                "name": "target",
                                                "type": "dynamic"
                                            },
                                            {
                                                "name": "transaction",
                                                "type": "dynamic"
                                            },
                                            {
                                                "name": "debugContext",
                                                "type": "dynamic"
                                            },
                                            {
                                                "name": "authenticationContext",
                                                "type": "dynamic"
                                            },
                                            {
                                                "name": "securityContext",
                                                "type": "dynamic"
                                            },
                                            {
                                                "name": "request",
                                                "type": "dynamic"
                                            }
                                        ]
                                    }
                                },
                                "dataSources": {
                                    
                                },
                                "destinations": {
                                    "logAnalytics": [
                                        {
                                            "workspaceResourceId": "[variables('workspaceResourceId')]",
                                            "workspaceId": "98c93347-2821-4db0-b570-a28197ba91bd",
                                            "name": "clv2ws1"
                                        }
                                    ]
                                },
                                "dataFlows": [
                                    {
                                        "streams": [
                                            "Custom-OktaSSO_CL"
                                        ],
                                        "destinations": [
                                            "clv2ws1"
                                        ],
                                        "transformKql": "let OktaASIMSev = parse_json('{\"DEBUG\": \"Informational\",\"INFO\": \"Informational\",\"WARN\": \"Medium\", \"ERROR\": \"High\"}');\nlet OktaASIMEventResult = parse_json('{\"SUCCESS\": \"Success\",\"ALLOW\": \"Success\",\"DENY\": \"Failure\", \"SKIPPED\": \"Failure\",\"FAILURE\": \"Failure\",\"CHALLENGE\": \"Partial\", \"UNKNOWN\": \"NA\"}');\nlet OktaDvcAction = parse_json('{\"SUCCESS\": \"\",\"ALLOW\": \"Allow\",\"DENY\": \"Deny\", \"SKIPPED\": \"Drop\",\"FAILURE\": \"\",\"CHALLENGE\": \"\", \"UNKNOWN\": \"\"}');\nlet OktaActorUserType = parse_json('{\"SystemPrincipal\": \"System Principal\",\"PublicClientApp\": \"Application\",\"User\": \"Regular\"}');\nsource | extend userId = iff((tostring(actor.id) == \"unknown\"), \"\", tostring(actor.id)),username = iff((tostring(actor.alternateId) contains \"@\"),tostring(actor.alternateId),\"\") | project TimeGenerated = todatetime(published), ActorDetailEntry = actor.detailEntry,ActorDisplayName = tostring(actor.displayName),OriginalUserId = tostring(actor.id),OriginalActorAlternateId = tostring(actor.alternateId),ActorUserId = userId,ActorUserIdType = iff(isempty(userId),\"\", \"OktaId\"),ActorUsername = username,ActorUsernameType = iff(isempty(username), \"\", \"UPN\"),ActorUserType = tostring(OktaActorUserType[tostring(actor.type)]),OriginalUserType = tostring(actor.type),AuthenticationContextAuthenticationProvider = tostring(authenticationContext.authenticationProvider),AuthenticationContextAuthenticationStep = toint(authenticationContext.authenticationStep),AuthenticationContextCredentialProvider = tostring(authenticationContext.credentialProvider),LogonMethod = tostring(authenticationContext.credentialType),ActorSessionId = tostring(authenticationContext.externalSessionId),AuthenticationContextInterface = tostring(authenticationContext.interface),AuthenticationContextIssuerId = tostring(authenticationContext.issuer.id),AuthenticationContextIssuerType = tostring(authenticationContext.issuer.type),OriginalClientDevice = tostring(client.device),SrcDeviceType = iff(tostring(client.device) == \"Computer\", \"Computer\", \"\"),SrcGeoCity = tostring(client.geographicalContext.city),SrcGeoCountry = tostring(client.geographicalContext.country),SrcGeoLatitude = toreal(client.geographicalContext.geolocation.lat), SrcGeoLongtitude = toreal(client.geographicalContext.geolocation.lon),  SrcGeoPostalCode = tostring(client.geographicalContext.postalCode), SrcGeoRegion = tostring(client.geographicalContext.state),  SrcDvcIdType = iff(isempty(client.id),\"\", \"OktaId\"),SrcDvcId = tostring(client.id),SrcIpAddr = tostring(client.ipAddress), ActingAppName = tostring(client.userAgent.browser),ActingAppType = \"Browser\",SrcDvcOs = tostring(client.userAgent.os), HttpUserAgent = tostring(client.userAgent.rawUserAgent),  SrcZone = tostring(client.zone), DebugData = debugContext.debugData, EventMessage = displayMessage,EventOriginalType = eventType,LegacyEventType = legacyEventType,EventOriginalUid = uuid,EventOriginalResultDetails = tostring(outcome.reason), EventResult = tostring(OktaASIMEventResult[tostring(outcome.result)]),  OriginalOutcomeResult = tostring(outcome.result),Request = request,SecurityContextAsNumber = toint(securityContext.asNumber), SecurityContextAsOrg = tostring(securityContext.asOrg),SecurityContextDomain = tostring(securityContext.domain),SrcIsp = tostring(securityContext.isp),  SecurityContextIsProxy = tobool(securityContext.isProxy),EventSeverity = tostring(OktaASIMSev[severity]),OriginalSeverity = severity,OriginalTarget = target,Version = version,TransactionType = tostring(transaction.type), TransactionId = tostring(transaction.id), TransactionDetail = transaction.detail,DvcAction = tostring(OktaDvcAction[tostring(outcome.result)]) \n",
                                        "outputStream": "Custom-OktaSSONativePollerV2_CL"
                                    }
                                ],
                                "provisioningState": "Succeeded",
                                "dataCollectionEndpointId": "[concat('/subscriptions/',parameters('subscription'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Insights/dataCollectionEndpoints/',parameters('workspace'))]"
                            }
                        },
                        {
                            "name": "[variables('_logAnalyticsTableId1')]",
                            "apiVersion": "2021-03-01-privatepreview",
                            "type": "Microsoft.OperationalInsights/workspaces/tables",
                            "location": "[parameters('workspace-location')]",
                            "kind": null,
                            "properties": {
                                "totalRetentionInDays": 30,
                                "archiveRetentionInDays": 0,
                                "plan": "Analytics",
                                "lastPlanModifiedDate": "2023-06-08T15:01:07.6198976Z",
                                "retentionInDaysAsDefault": false,
                                "totalRetentionInDaysAsDefault": false,
                                "schema": {
                                    "tableSubType": "DataCollectionRuleBased",
                                    "name": "[variables('_logAnalyticsTableId1')]",
                                    "tableType": "CustomLog",
                                    "columns": [
                                        {
                                            "name": "ActingAppName",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "ActingAppType",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "ActorDetailEntry",
                                            "type": "dynamic",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "ActorDisplayName",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "ActorSessionId",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "ActorUserId",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "ActorUserIdType",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "ActorUsername",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "ActorUsernameType",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "ActorUserType",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "AuthenticationContextAuthenticationProvider",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "AuthenticationContextAuthenticationStep",
                                            "type": "int",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "AuthenticationContextCredentialProvider",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "AuthenticationContextInterface",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "AuthenticationContextIssuerId",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "AuthenticationContextIssuerType",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "DebugData",
                                            "type": "dynamic",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "DvcAction",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "EventMessage",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "EventOriginalResultDetails",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "EventOriginalType",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "EventOriginalUid",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "EventResult",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "EventSeverity",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "HttpUserAgent",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "LegacyEventType",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "LogonMethod",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "OriginalActorAlternateId",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "OriginalClientDevice",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "OriginalOutcomeResult",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "OriginalSeverity",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "OriginalTarget",
                                            "type": "dynamic",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "OriginalUserId",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "OriginalUserType",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Request",
                                            "type": "dynamic",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "SecurityContextAsNumber",
                                            "type": "int",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "SecurityContextAsOrg",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "SecurityContextDomain",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "SecurityContextIsProxy",
                                            "type": "boolean",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "SrcDeviceType",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "SrcDvcId",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "SrcDvcOs",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "SrcGeoCity",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "SrcGeoCountry",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "SrcGeoLatitude",
                                            "type": "real",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "SrcGeoLongtitude",
                                            "type": "real",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "SrcGeoPostalCode",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "SrcGeoRegion",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "SrcIpAddr",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "SrcIsp",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "SrcZone",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "TimeGenerated",
                                            "type": "datetime",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "TransactionDetail",
                                            "type": "dynamic",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "TransactionId",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "TransactionType",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "Version",
                                            "type": "string",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        },
                                        {
                                            "name": "SrcDvcIdType",
                                            "type": "string",
                                            "description": "",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        }
                                    ],
                                    "standardColumns": [
                                        {
                                            "name": "TenantId",
                                            "type": "guid",
                                            "isDefaultDisplay": false,
                                            "isHidden": false
                                        }
                                    ],
                                    "solutions": [
                                        "LogManagement"
                                    ],
                                    "isTroubleshootingAllowed": true
                                },
                                "provisioningState": "Succeeded",
                                "retentionInDays": 30
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "contentProductId": "[concat(substring(variables('_solutionId'), 0, 50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentIdConnectorDefinition'),'-', variables('dataConnectorVersionConnectorDefinition'))))]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "version": "[variables('_solutionVersion')]"
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition'))]",
            "apiVersion": "2022-09-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
            "location": "[parameters('workspace-location')]",
            "kind": "Customizable",
            "properties": {
                "connectorUiConfig": {
                    "title": "Okta Single Sign-On (Preview)",
                    "publisher": "Microsoft",
	            "descriptionMarkdown": "The [Okta Single Sign-On (SSO)](https://www.okta.com/products/single-sign-on/) data connector provides the capability to ingest audit and event logs from the Okta Sysem Log API into Microsoft Sentinel. The data connector is built on Microsoft Sentinelג€™s Codeless Connector Platform and uses the Okta System Log API to fetch the events. The connector supports DCR-based [ingestion time transformations](https://docs.microsoft.com/azure/azure-monitor/logs/custom-logs-overview) that parses the received security event data into a custom columns so that queries don't need to parse it again, thus resulting in better performance.",		
                    "graphQueriesTableName": "OktaSSONativePollerV2_CL",
                    "graphQueries": [
                        {
                            "metricName": "Total data received",
                            "legend": "Okta SSO Events",
                            "baseQuery": "{{graphQueriesTableName}}"
                        }
                    ],
                    "sampleQueries": [
                        {
                            "description": "Get Sample of Okta SSO Events",
                            "query": "{{graphQueriesTableName}}\n | take 10"
                        },
                        {
                            "description": "Total Events by uuid",
                            "query": "{{graphQueriesTableName}}\n | summarize count() by OriginalEventUid"
                        }
                    ],
                    "dataTypes": [
                        {
                            "name": "{{graphQueriesTableName}}",
                            "lastDataReceivedQuery": "{{graphQueriesTableName}}|summarize Time = max  (TimeGenerated)\n|where isnotempty(Time)"
                        }
                    ],
                    "connectivityCriteria": [
                        {
                            "type": "HasDataConnectors"
                        }
                    ],
                    "availability": {
                        "isPreview": false
                    },
                    "permissions": {
                        "resourceProvider": [
                            {
                                "provider": "Microsoft.OperationalInsights/workspaces",
                                "permissionsDisplayText": "Read and Write permissions are required.",
                                "providerDisplayName": "Workspace",
                                "scope": "Workspace",
                                "requiredPermissions": {
                                    "write": true,
                                    "read": true,
                                    "delete": true
                                }
                            }
                            ],
                        "customs": [
                            {
                                "name": "Okta API Token",
                                "description": "An Okta API token. Follow the [following instructions](https://developer.okta.com/docs/guides/create-an-api-token/main/) to create an See the [documentation](https://developer.okta.com/docs/reference/api/system-log/) to learn more about Okta System Log API."
                            }
                        ]
                    },
                    "instructionSteps": [
                        {
                            "description": "To enable the Okta Single Sign-On for Microsoft Sentinel, provide the required information below and click on Connect.\n>",
                            "instructions": [
                                {
                                    "type": "DataConnectorsGrid",
                                    "parameters": {
                                        "mapping": [
                                            {
                                                "columnName": "Endpoint",
                                                "columnValue": "properties.request.apiEndpoint"
                                            }
                                        ],
                                        "menuItems": [
                                            "DeleteConnector"
                                        ]
                                    }
                                },
                                {
                                    "type": "ContextPane",
                                    "parameters": {
                                        "isPrimary": true,
                                        "label": "Add domain",
                                        "title": "Add domain",
                                        "subtitle": "Add domain",
                                        "contextPaneType": "DataConnectorsContextPane",
                                        "instructionSteps": [
                                            {
                                                "instructions": [
                                                    {
                                                        "type": "Textbox",
                                                        "parameters": {
                                                            "label": "Okta Domain Name",
                                                            "placeholder": "Okta Domain Name (e.g., myDomain.okta.com)",
                                                            "type": "text",
                                                            "name": "domainname"
                                                        }
                                                    },
                                                    {
                                                        "type": "Textbox",
                                                        "parameters": {
                                                            "label": "API Key",
                                                            "placeholder": "API Key",
                                                            "type": "password",
                                                            "name": "apikey"
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition')))]",
            "apiVersion": "2022-01-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition'))]",
                "contentId": "[variables('_dataConnectorContentIdConnectorDefinition')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersionConnectorDefinition')]",
                "source": {
                    "sourceId": "[variables('_solutionId')]",
                    "name": "[variables('_solutionName')]",
                    "kind": "Solution"
                },
                "author": {
                    "name": "[variables('_solutionAuthor')]"
                },
                "support": {
                    "name": "[variables('_solutionAuthor')]",
                    "tier": "[variables('_solutionTier')]"
                },
                "dependencies": {
                    "criteria": [
                        {
                            "version": "[variables('dataConnectorVersionConnections')]",
                            "contentId": "[variables('_dataConnectorContentIdConnections')]",
                            "kind": "ResourcesDataConnector"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnections'), variables('dataConnectorVersionConnections'))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "contentId": "[variables('_dataConnectorContentIdConnections')]",
                "displayName": "[concat(variables('_solutionName'), variables('dataConnectorTemplateNameConnections'))]",
                "contentKind": "ResourcesDataConnector",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('dataConnectorVersionConnections')]",
                    "parameters": {
                        "connectorDefinitionName": {
                            "defaultValue": "connectorDefinitionName",
                            "type": "string",
                            "minLength": 1
                        },
                        "workspace": {
                            "defaultValue": "[parameters('workspace')]",
                            "type": "string"
                        },
                        "dcrConfig": {
                            "defaultValue": {
                                "dataCollectionEndpoint": "data collection Endpoint",
                                "dataCollectionRuleImmutableId": "data collection rule immutableId"
                            },
                            "type": "object"
                        },
			"domainname": {
                            "defaultValue": "domain name",
                            "type": "string",
                            "minLength": 1
                        },
                        "apikey": {
                            "defaultValue": "API Key",
                            "type": "string",
                            "minLength": 1
                        }
                    },
                    "variables": {
                        "_dataConnectorContentIdConnections": "[variables('_dataConnectorContentIdConnections')]"
                    },
                    "resources": [
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnections')))]",
                            "apiVersion": "2022-01-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "properties": {
                                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentIdConnections'))]",
                                "contentId": "[variables('_dataConnectorContentIdConnections')]",
                                "kind": "ResourcesDataConnector",
                                "version": "[variables('dataConnectorVersionConnections')]",
                                "source": {
                                    "sourceId": "[variables('_solutionId')]",
                                    "name": "[variables('_solutionName')]",
                                    "kind": "Solution"
                                },
                                "author": {
                                    "name": "[variables('_solutionAuthor')]"
                                },
                                "support": {
                                    "name": "[variables('_solutionAuthor')]",
                                    "tier": "[variables('_solutionTier')]"
                                }
                            }
                        },
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', 'OktaDCV1')]",
                            "apiVersion": "2022-12-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
                            "location": "[parameters('workspace-location')]",
                            "kind": "RestApiPoller",
                            "properties": {
                                "dataType": "Okta System Log API",
                                "response": {
                                    "eventsJsonPaths": [
                                        "$"
                                    ],
                                    "format": "json"
                                },
                                "paging": {
                                    "pagingType": "LinkHeader"
                                },
                                "connectorDefinitionName": "[[parameters('connectorDefinitionName')]",
                                "auth": {
                                    "apiKeyName": "Authorization",
                                    "ApiKey": "[[parameters('apikey')]",
                                    "apiKeyIdentifier": "SSWS",
                                    "type": "APIKey"
                                },
                                "request": {
                                    "apiEndpoint": "[[concat('https://',parameters('domainname'),'/api/v1/logs')]",
                                    "rateLimitQPS": 10,
                                    "queryWindowInMin": 5,
                                    "httpMethod": "GET",
                                    "retryCount": 3,
                                    "timeoutInSeconds": 60,
                                    "headers": {
                                        "Accept": "application/json",
                                        "User-Agent": "Scuba"
                                    },
                                    "startTimeAttributeName": "since",
				    "endTimeAttributeName": "until"		     
                                },
                                "dcrConfig": {
                                    "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                                    "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]",
                                    "streamName": "Custom-OktaSSO_CL"
                                },
                                "isActive": true
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "contentProductId": "[concat(substring(variables('_solutionId'), 0, 50),'-','rdc','-', uniqueString(concat(variables('_solutionId'),'-','ResourcesDataConnector','-',variables('_dataConnectorContentIdConnections'),'-', variables('dataConnectorVersionConnections'))))]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "version": "[variables('_solutionVersion')]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]",
            "location": "[parameters('workspace-location')]",
            "apiVersion": "2023-04-01-preview",
            "properties": {
                "version": "[variables('_solutionVersion')]",
                "kind": "Solution",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('_solutionId')]",
                "source": {
                    "kind": "Solution",
                    "name": "[variables('_solutionName')]",
                    "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                    "name": "[variables('_solutionAuthor')]"
                },
                "support": {
                    "name": "[variables('_solutionAuthor')]"
                },
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "kind": "DataConnector",
                            "contentId": "[variables('dataConnectorVersionConnectorDefinition')]",
                            "version": "[variables('_dataConnectorContentIdConnectorDefinition')]"
                        }
                    ]
                },
                "firstPublishDate": "2022-06-24",
                "providers": [
                    "[variables('_solutionAuthor')]"
                ],
                "contentKind": "Solution",
                "packageId": "[variables('_solutionId')]",
                "contentProductId": "[concat(substring(variables('_solutionId'), 0, 50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]",
                "displayName": "[variables('_solutionName')]",
                "publisherDisplayName": "[variables('_solutionId')]",
                "descriptionHtml": "test",
                "icon": "[variables('_packageIcon')]"
            }
        }
    ]
}
