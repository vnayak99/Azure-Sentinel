{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Infoblox",
    "comments": "Solution template for Infoblox NIOS"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Infoblox NIOS",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "watchlist1-id": {
      "type": "string",
      "defaultValue": "Sources_by_SourceType",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    }
  },
  "variables": {
    "_solutionName": "Infoblox NIOS",
    "_solutionVersion": "3.0.2",
    "solutionId": "azuresentinel.azure-sentinel-solution-infobloxnios",
    "_solutionId": "[variables('solutionId')]",
    "uiConfigId1": "InfobloxNIOS",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "InfobloxNIOS",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1'))))]",
    "dataConnectorVersion1": "1.0.0",
    "_dataConnectorcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId1'),'-', variables('dataConnectorVersion1'))))]",
    "workbookVersion1": "1.1.0",
    "workbookContentId1": "InfobloxNIOSWorkbook",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1'))))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "_workbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId1'),'-', variables('workbookVersion1'))))]",
    "parserName1": "Infoblox",
    "_parserName1": "[concat(parameters('workspace'),'/',variables('parserName1'))]",
    "parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
    "_parserId1": "[variables('parserId1')]",
    "parserTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId1'))))]",
    "parserVersion1": "1.0.0",
    "parserContentId1": "Infoblox-Parser",
    "_parserContentId1": "[variables('parserContentId1')]",
    "_parsercontentProductId1": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId1'),'-', variables('parserVersion1'))))]",
    "parserName2": "Infoblox_allotherdhcpdTypes",
    "_parserName2": "[concat(parameters('workspace'),'/',variables('parserName2'))]",
    "parserId2": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName2'))]",
    "_parserId2": "[variables('parserId2')]",
    "parserTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId2'))))]",
    "parserVersion2": "1.0.0",
    "parserContentId2": "Infoblox_allotherdhcpdTypes-Parser",
    "_parserContentId2": "[variables('parserContentId2')]",
    "_parsercontentProductId2": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId2'),'-', variables('parserVersion2'))))]",
    "parserName3": "Infoblox_allotherdnsTypes",
    "_parserName3": "[concat(parameters('workspace'),'/',variables('parserName3'))]",
    "parserId3": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName3'))]",
    "_parserId3": "[variables('parserId3')]",
    "parserTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId3'))))]",
    "parserVersion3": "1.0.0",
    "parserContentId3": "Infoblox_allotherdnsTypes-Parser",
    "_parserContentId3": "[variables('parserContentId3')]",
    "_parsercontentProductId3": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId3'),'-', variables('parserVersion3'))))]",
    "parserName4": "Infoblox_allotherlogTypes",
    "_parserName4": "[concat(parameters('workspace'),'/',variables('parserName4'))]",
    "parserId4": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName4'))]",
    "_parserId4": "[variables('parserId4')]",
    "parserTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId4'))))]",
    "parserVersion4": "1.0.0",
    "parserContentId4": "Infoblox_allotherlogTypes-Parser",
    "_parserContentId4": "[variables('parserContentId4')]",
    "_parsercontentProductId4": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId4'),'-', variables('parserVersion4'))))]",
    "parserName5": "Infoblox_dhcp_consolidated",
    "_parserName5": "[concat(parameters('workspace'),'/',variables('parserName5'))]",
    "parserId5": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName5'))]",
    "_parserId5": "[variables('parserId5')]",
    "parserTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId5'))))]",
    "parserVersion5": "1.0.0",
    "parserContentId5": "Infoblox_dhcp_consolidated-Parser",
    "_parserContentId5": "[variables('parserContentId5')]",
    "_parsercontentProductId5": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId5'),'-', variables('parserVersion5'))))]",
    "parserName6": "Infoblox_dhcpack",
    "_parserName6": "[concat(parameters('workspace'),'/',variables('parserName6'))]",
    "parserId6": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName6'))]",
    "_parserId6": "[variables('parserId6')]",
    "parserTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId6'))))]",
    "parserVersion6": "1.0.0",
    "parserContentId6": "Infoblox_dhcpack-Parser",
    "_parserContentId6": "[variables('parserContentId6')]",
    "_parsercontentProductId6": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId6'),'-', variables('parserVersion6'))))]",
    "parserName7": "Infoblox_dhcpadded",
    "_parserName7": "[concat(parameters('workspace'),'/',variables('parserName7'))]",
    "parserId7": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName7'))]",
    "_parserId7": "[variables('parserId7')]",
    "parserTemplateSpecName7": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId7'))))]",
    "parserVersion7": "1.0.0",
    "parserContentId7": "Infoblox_dhcpadded-Parser",
    "_parserContentId7": "[variables('parserContentId7')]",
    "_parsercontentProductId7": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId7'),'-', variables('parserVersion7'))))]",
    "parserName8": "Infoblox_dhcpbindupdate",
    "_parserName8": "[concat(parameters('workspace'),'/',variables('parserName8'))]",
    "parserId8": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName8'))]",
    "_parserId8": "[variables('parserId8')]",
    "parserTemplateSpecName8": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId8'))))]",
    "parserVersion8": "1.0.0",
    "parserContentId8": "Infoblox_dhcpbindupdate-Parser",
    "_parserContentId8": "[variables('parserContentId8')]",
    "_parsercontentProductId8": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId8'),'-', variables('parserVersion8'))))]",
    "parserName9": "Infoblox_dhcpdiscover",
    "_parserName9": "[concat(parameters('workspace'),'/',variables('parserName9'))]",
    "parserId9": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName9'))]",
    "_parserId9": "[variables('parserId9')]",
    "parserTemplateSpecName9": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId9'))))]",
    "parserVersion9": "1.0.0",
    "parserContentId9": "Infoblox_dhcpdiscover-Parser",
    "_parserContentId9": "[variables('parserContentId9')]",
    "_parsercontentProductId9": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId9'),'-', variables('parserVersion9'))))]",
    "parserName10": "Infoblox_dhcpexpire",
    "_parserName10": "[concat(parameters('workspace'),'/',variables('parserName10'))]",
    "parserId10": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName10'))]",
    "_parserId10": "[variables('parserId10')]",
    "parserTemplateSpecName10": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId10'))))]",
    "parserVersion10": "1.0.0",
    "parserContentId10": "Infoblox_dhcpexpire-Parser",
    "_parserContentId10": "[variables('parserContentId10')]",
    "_parsercontentProductId10": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId10'),'-', variables('parserVersion10'))))]",
    "parserName11": "Infoblox_dhcpinform",
    "_parserName11": "[concat(parameters('workspace'),'/',variables('parserName11'))]",
    "parserId11": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName11'))]",
    "_parserId11": "[variables('parserId11')]",
    "parserTemplateSpecName11": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId11'))))]",
    "parserVersion11": "1.0.0",
    "parserContentId11": "Infoblox_dhcpinform-Parser",
    "_parserContentId11": "[variables('parserContentId11')]",
    "_parsercontentProductId11": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId11'),'-', variables('parserVersion11'))))]",
    "parserName12": "Infoblox_dhcpoffer",
    "_parserName12": "[concat(parameters('workspace'),'/',variables('parserName12'))]",
    "parserId12": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName12'))]",
    "_parserId12": "[variables('parserId12')]",
    "parserTemplateSpecName12": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId12'))))]",
    "parserVersion12": "1.0.0",
    "parserContentId12": "Infoblox_dhcpoffer-Parser",
    "_parserContentId12": "[variables('parserContentId12')]",
    "_parsercontentProductId12": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId12'),'-', variables('parserVersion12'))))]",
    "parserName13": "Infoblox_dhcpoption",
    "_parserName13": "[concat(parameters('workspace'),'/',variables('parserName13'))]",
    "parserId13": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName13'))]",
    "_parserId13": "[variables('parserId13')]",
    "parserTemplateSpecName13": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId13'))))]",
    "parserVersion13": "1.0.0",
    "parserContentId13": "Infoblox_dhcpoption-Parser",
    "_parserContentId13": "[variables('parserContentId13')]",
    "_parsercontentProductId13": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId13'),'-', variables('parserVersion13'))))]",
    "parserName14": "Infoblox_dhcpother",
    "_parserName14": "[concat(parameters('workspace'),'/',variables('parserName14'))]",
    "parserId14": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName14'))]",
    "_parserId14": "[variables('parserId14')]",
    "parserTemplateSpecName14": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId14'))))]",
    "parserVersion14": "1.0.0",
    "parserContentId14": "Infoblox_dhcpother-Parser",
    "_parserContentId14": "[variables('parserContentId14')]",
    "_parsercontentProductId14": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId14'),'-', variables('parserVersion14'))))]",
    "parserName15": "Infoblox_dhcprelease",
    "_parserName15": "[concat(parameters('workspace'),'/',variables('parserName15'))]",
    "parserId15": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName15'))]",
    "_parserId15": "[variables('parserId15')]",
    "parserTemplateSpecName15": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId15'))))]",
    "parserVersion15": "1.0.0",
    "parserContentId15": "Infoblox_dhcprelease-Parser",
    "_parserContentId15": "[variables('parserContentId15')]",
    "_parsercontentProductId15": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId15'),'-', variables('parserVersion15'))))]",
    "parserName16": "Infoblox_dhcpremoved",
    "_parserName16": "[concat(parameters('workspace'),'/',variables('parserName16'))]",
    "parserId16": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName16'))]",
    "_parserId16": "[variables('parserId16')]",
    "parserTemplateSpecName16": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId16'))))]",
    "parserVersion16": "1.0.0",
    "parserContentId16": "Infoblox_dhcpremoved-Parser",
    "_parserContentId16": "[variables('parserContentId16')]",
    "_parsercontentProductId16": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId16'),'-', variables('parserVersion16'))))]",
    "parserName17": "Infoblox_dhcprequest",
    "_parserName17": "[concat(parameters('workspace'),'/',variables('parserName17'))]",
    "parserId17": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName17'))]",
    "_parserId17": "[variables('parserId17')]",
    "parserTemplateSpecName17": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId17'))))]",
    "parserVersion17": "1.0.0",
    "parserContentId17": "Infoblox_dhcprequest-Parser",
    "_parserContentId17": "[variables('parserContentId17')]",
    "_parsercontentProductId17": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId17'),'-', variables('parserVersion17'))))]",
    "parserName18": "Infoblox_dhcpsession",
    "_parserName18": "[concat(parameters('workspace'),'/',variables('parserName18'))]",
    "parserId18": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName18'))]",
    "_parserId18": "[variables('parserId18')]",
    "parserTemplateSpecName18": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId18'))))]",
    "parserVersion18": "1.0.0",
    "parserContentId18": "Infoblox_dhcpsession-Parser",
    "_parserContentId18": "[variables('parserContentId18')]",
    "_parsercontentProductId18": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId18'),'-', variables('parserVersion18'))))]",
    "parserName19": "Infoblox_dns_consolidated",
    "_parserName19": "[concat(parameters('workspace'),'/',variables('parserName19'))]",
    "parserId19": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName19'))]",
    "_parserId19": "[variables('parserId19')]",
    "parserTemplateSpecName19": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId19'))))]",
    "parserVersion19": "1.0.0",
    "parserContentId19": "Infoblox_dns_consolidated-Parser",
    "_parserContentId19": "[variables('parserContentId19')]",
    "_parsercontentProductId19": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId19'),'-', variables('parserVersion19'))))]",
    "parserName20": "Infoblox_dnsclient",
    "_parserName20": "[concat(parameters('workspace'),'/',variables('parserName20'))]",
    "parserId20": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName20'))]",
    "_parserId20": "[variables('parserId20')]",
    "parserTemplateSpecName20": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId20'))))]",
    "parserVersion20": "1.0.0",
    "parserContentId20": "Infoblox_dnsclient-Parser",
    "_parserContentId20": "[variables('parserContentId20')]",
    "_parsercontentProductId20": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId20'),'-', variables('parserVersion20'))))]",
    "parserName21": "Infoblox_dnsgss",
    "_parserName21": "[concat(parameters('workspace'),'/',variables('parserName21'))]",
    "parserId21": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName21'))]",
    "_parserId21": "[variables('parserId21')]",
    "parserTemplateSpecName21": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId21'))))]",
    "parserVersion21": "1.0.0",
    "parserContentId21": "Infoblox_dnsgss-Parser",
    "_parserContentId21": "[variables('parserContentId21')]",
    "_parsercontentProductId21": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId21'),'-', variables('parserVersion21'))))]",
    "parserName22": "Infoblox_dnszone",
    "_parserName22": "[concat(parameters('workspace'),'/',variables('parserName22'))]",
    "parserId22": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName22'))]",
    "_parserId22": "[variables('parserId22')]",
    "parserTemplateSpecName22": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring(variables('_parserContentId22'))))]",
    "parserVersion22": "1.0.0",
    "parserContentId22": "Infoblox_dnszone-Parser",
    "_parserContentId22": "[variables('parserContentId22')]",
    "_parsercontentProductId22": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('_parserContentId22'),'-', variables('parserVersion22'))))]",
    "analyticRuleVersion1": "1.0.2",
    "analyticRulecontentId1": "b8266f81-2715-41a6-9062-42486cbc9c73",
    "_analyticRulecontentId1": "[variables('analyticRulecontentId1')]",
    "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId1'))]",
    "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId1'))))]",
    "_analyticRulecontentProductId1": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-',variables('_analyticRulecontentId1'),'-', variables('analyticRuleVersion1'))))]",
    "analyticRuleVersion2": "1.0.2",
    "analyticRulecontentId2": "57e56fc9-417a-4f41-a579-5475aea7b8ce",
    "_analyticRulecontentId2": "[variables('analyticRulecontentId2')]",
    "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', variables('analyticRulecontentId2'))]",
    "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring(variables('_analyticRulecontentId2'))))]",
    "_analyticRulecontentProductId2": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-',variables('_analyticRulecontentId2'),'-', variables('analyticRuleVersion2'))))]",
    "Sources_by_SourceType": "Sources_by_SourceType",
    "_Sources_by_SourceType": "[variables('Sources_by_SourceType')]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox NIOS data connector with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "Infoblox NIOS",
                  "publisher": "Infoblox",
                  "descriptionMarkdown": "The [Infoblox Network Identity Operating System (NIOS)](https://www.infoblox.com/glossary/network-identity-operating-system-nios/) connector allows you to easily connect your Infoblox NIOS logs with Microsoft Sentinel, to view dashboards, create custom alerts, and improve investigation. This gives you more insight into your organization's network and improves your security operation capabilities.",
                  "additionalRequirementBanner": "These queries are dependent on a parser based on a Kusto Function deployed as part of the solution.",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "InfobloxNIOS",
                      "baseQuery": "Infoblox"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Total Count by DHCP Request Message Types",
                      "query": "union isfuzzy=true \n Infoblox_dhcpdiscover,Infoblox_dhcprequest,Infoblox_dhcpinform \n| summarize count() by Log_Type"
                    },
                    {
                      "description": "Top 5 Source IP address",
                      "query": "Infoblox_dnsclient \n | summarize count() by SrcIpAddr \n | top 10 by count_ desc"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "Syslog (InfobloxNIOS)",
                      "lastDataReceivedQuery": "Infoblox \n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "Infoblox \n | where TimeGenerated > ago(3d)\n |take 1 \n | project IsConnected = true"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "write permission is required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "delete": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Infoblox NIOS",
                        "description": "must be configured to export logs via Syslog"
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": "**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected which is deployed as part of the solution. To view the function code in Log Analytics, open Log Analytics/Microsoft Sentinel Logs blade, click Functions and search for the alias Infoblox and load the function code or click [here](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Infoblox%20NIOS/Parser/Infoblox.txt), on the second line of the query, enter the hostname(s) of your Infoblox device(s) and any other unique identifiers for the logstream. The function usually takes 10-15 minutes to activate after solution installation/update."
                    },
                    {
                      "description": "Typically, you should install the agent on a different computer from the one on which the logs are generated.\n\n>  Syslog logs are collected only from **Linux** agents.",
                      "instructions": [
                        {
                          "parameters": {
                            "title": "Choose where to install the agent:",
                            "instructionSteps": [
                              {
                                "title": "Install agent on Azure Linux Virtual Machine",
                                "description": "Select the machine to install the agent on and then click **Connect**.",
                                "instructions": [
                                  {
                                    "parameters": {
                                      "linkType": "InstallAgentOnLinuxVirtualMachine"
                                    },
                                    "type": "InstallAgent"
                                  }
                                ]
                              },
                              {
                                "title": "Install agent on a non-Azure Linux Machine",
                                "description": "Download the agent on the relevant machine and follow the instructions.",
                                "instructions": [
                                  {
                                    "parameters": {
                                      "linkType": "InstallAgentOnLinuxNonAzure"
                                    },
                                    "type": "InstallAgent"
                                  }
                                ]
                              }
                            ]
                          },
                          "type": "InstructionStepsGroup"
                        }
                      ],
                      "title": "1. Install and onboard the agent for Linux"
                    },
                    {
                      "description": "Configure the facilities you want to collect and their severities.\n 1. Under workspace advanced settings **Configuration**, select **Data** and then **Syslog**.\n 2. Select **Apply below configuration to my machines** and select the facilities and severities.\n 3.  Click **Save**.",
                      "instructions": [
                        {
                          "parameters": {
                            "linkType": "OpenSyslogSettings"
                          },
                          "type": "InstallAgent"
                        }
                      ],
                      "title": "2. Configure the logs to be collected"
                    },
                    {
                      "description": "[Follow these instructions](https://www.infoblox.com/wp-content/uploads/infoblox-deployment-guide-slog-and-snmp-configuration-for-nios.pdf) to enable syslog forwarding of Infoblox NIOS Logs. Use the IP address or hostname for the Linux device with the Linux agent installed as the Destination IP address.",
                      "title": "3. Configure and connect the Infoblox NIOS"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Infoblox NIOS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "contentKind": "DataConnector",
        "displayName": "Infoblox NIOS",
        "contentProductId": "[variables('_dataConnectorcontentProductId1')]",
        "id": "[variables('_dataConnectorcontentProductId1')]",
        "version": "[variables('dataConnectorVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Infoblox NIOS",
          "publisher": "Infoblox",
          "descriptionMarkdown": "The [Infoblox Network Identity Operating System (NIOS)](https://www.infoblox.com/glossary/network-identity-operating-system-nios/) connector allows you to easily connect your Infoblox NIOS logs with Microsoft Sentinel, to view dashboards, create custom alerts, and improve investigation. This gives you more insight into your organization's network and improves your security operation capabilities.",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "InfobloxNIOS",
              "baseQuery": "Infoblox"
            }
          ],
          "dataTypes": [
            {
              "name": "Syslog (InfobloxNIOS)",
              "lastDataReceivedQuery": "Infoblox \n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "Infoblox \n | where TimeGenerated > ago(3d)\n |take 1 \n | project IsConnected = true"
              ]
            }
          ],
          "sampleQueries": [
            {
              "description": "Total Count by DHCP Request Message Types",
              "query": "union isfuzzy=true \n Infoblox_dhcpdiscover,Infoblox_dhcprequest,Infoblox_dhcpinform \n| summarize count() by Log_Type"
            },
            {
              "description": "Top 5 Source IP address",
              "query": "Infoblox_dnsclient \n | summarize count() by SrcIpAddr \n | top 10 by count_ desc"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "write permission is required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "delete": true
                }
              }
            ],
            "customs": [
              {
                "name": "Infoblox NIOS",
                "description": "must be configured to export logs via Syslog"
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected which is deployed as part of the solution. To view the function code in Log Analytics, open Log Analytics/Microsoft Sentinel Logs blade, click Functions and search for the alias Infoblox and load the function code or click [here](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Infoblox%20NIOS/Parser/Infoblox.txt), on the second line of the query, enter the hostname(s) of your Infoblox device(s) and any other unique identifiers for the logstream. The function usually takes 10-15 minutes to activate after solution installation/update."
            },
            {
              "description": "Typically, you should install the agent on a different computer from the one on which the logs are generated.\n\n>  Syslog logs are collected only from **Linux** agents.",
              "instructions": [
                {
                  "parameters": {
                    "title": "Choose where to install the agent:",
                    "instructionSteps": [
                      {
                        "title": "Install agent on Azure Linux Virtual Machine",
                        "description": "Select the machine to install the agent on and then click **Connect**.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxVirtualMachine"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      },
                      {
                        "title": "Install agent on a non-Azure Linux Machine",
                        "description": "Download the agent on the relevant machine and follow the instructions.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxNonAzure"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "InstructionStepsGroup"
                }
              ],
              "title": "1. Install and onboard the agent for Linux"
            },
            {
              "description": "Configure the facilities you want to collect and their severities.\n 1. Under workspace advanced settings **Configuration**, select **Data** and then **Syslog**.\n 2. Select **Apply below configuration to my machines** and select the facilities and severities.\n 3.  Click **Save**.",
              "instructions": [
                {
                  "parameters": {
                    "linkType": "OpenSyslogSettings"
                  },
                  "type": "InstallAgent"
                }
              ],
              "title": "2. Configure the logs to be collected"
            },
            {
              "description": "[Follow these instructions](https://www.infoblox.com/wp-content/uploads/infoblox-deployment-guide-slog-and-snmp-configuration-for-nios.pdf) to enable syslog forwarding of Infoblox NIOS Logs. Use the IP address or hostname for the Linux device with the Linux agent installed as the Destination IP address.",
              "title": "3. Configure and connect the Infoblox NIOS"
            }
          ],
          "id": "[variables('_uiConfigId1')]",
          "additionalRequirementBanner": "These queries are dependent on a parser based on a Kusto Function deployed as part of the solution."
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox-Workbook-V2Workbook Workbook with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "Gain insight into Infoblox NIOS by analyzing, collecting and correlating DHCP and DNS data.\nThis workbook provides visibility into DHCP and DNS traffic"
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"26773226-79a9-4dd2-9de6-ade1f250ace6\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"label\":\"Time Range\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":2419200000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true}},{\"id\":\"00be31a6-f3f8-4de8-845d-7a4985d41ef3\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"InfobloxDevice\",\"label\":\"Infoblox Device\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source\",\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"above\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 0\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"edf8a22f-492e-4c73-b113-31cb1bfee2ff\",\"cellValue\":\"selectedTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"DHCP\",\"subTarget\":\"DHCPTab\",\"preText\":\"DHCP\",\"style\":\"link\"},{\"id\":\"f6c0c04f-5e57-43fb-9daf-f18a44dd1d87\",\"cellValue\":\"selectedTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"DNS\",\"subTarget\":\"DNSTab\",\"style\":\"link\"}]},\"name\":\"links - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Infoblox_dhcp_consolidated\\r\\n| where Computer in ({InfobloxDevice}) or '*' in ({InfobloxDevice})\\r\\n| where Log_Type startswith \\\"DHCP\\\"\\r\\n| summarize count() by Log_Type, bin(TimeGenerated, {TimeRange:grain})\",\"size\":0,\"title\":\"Total Events by DHCP Message Type\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"DHCPTab\"},\"name\":\"query - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union \\r\\nInfoblox_dhcpdiscover,Infoblox_dhcprequest,Infoblox_dhcpinform\\r\\n| where Computer in ({InfobloxDevice}) or '*' in ({InfobloxDevice})\\r\\n| summarize count() by Log_Type, bin(TimeGenerated, {TimeRange:grain})\",\"size\":0,\"title\":\"DHCP Requests by Message Type\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"DHCPREQUEST\",\"color\":\"magenta\"},{\"seriesName\":\"DHCPDISCOVER\",\"color\":\"green\"},{\"seriesName\":\"DHCPINFORM\",\"color\":\"blue\"}],\"xSettings\":{\"numberFormatSettings\":{\"unit\":0,\"options\":{\"style\":\"decimal\",\"useGrouping\":true}}}}},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"DHCPTab\"},\"customWidth\":\"50\",\"name\":\"query - 4 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union \\r\\nInfoblox_dhcpoffer,Infoblox_dhcpack\\r\\n| where Computer in ({InfobloxDevice}) or '*' in ({InfobloxDevice})\\r\\n| summarize count() by Log_Type, bin(TimeGenerated, {TimeRange:grain})\",\"size\":0,\"title\":\"DHCP Responses by Message Type\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"DHCPOFFER\",\"color\":\"blue\"},{\"seriesName\":\"DHCPACK\",\"color\":\"magenta\"}]}},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"DHCPTab\"},\"customWidth\":\"50\",\"name\":\"query - 4 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Infoblox_dhcpdiscover\\r\\n| where Computer in ({InfobloxDevice}) or '*' in ({InfobloxDevice})\\r\\n| summarize count() by tostring(SrcMacAddr)\\r\\n| top 10 by count_\",\"size\":0,\"title\":\"Top 10 Clients by Requests\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":3,\"formatOptions\":{\"palette\":\"coldHot\"}}],\"labelSettings\":[{\"columnId\":\"SrcMacAddr\",\"label\":\"Client MAC Address\"},{\"columnId\":\"count_\",\"label\":\"Total\"}]}},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"DHCPTab\"},\"customWidth\":\"50\",\"name\":\"query - 4 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Infoblox_dhcpdiscover\\r\\n| summarize count() by tostring(Network)\\r\\n| distinct Network\\r\\n\\r\\n\",\"size\":0,\"title\":\"Top 10 Clients by Requests\",\"timeContext\":{\"durationMs\":604800000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":3,\"formatOptions\":{\"palette\":\"coldHot\"}}]}},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"DHCPTab\"},\"customWidth\":\"50\",\"name\":\"query - 4 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Infoblox_dns_consolidated \\r\\n| where Computer in ({InfobloxDevice}) or '*' in ({InfobloxDevice})\\r\\n| summarize count() by Computer, bin(TimeGenerated,15m)\",\"size\":0,\"showAnnotations\":true,\"title\":\"DNS Activity by Server\",\"color\":\"magenta\",\"timeContext\":{\"durationMs\":604800000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"areachart\"},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"DNSTab\"},\"name\":\"query - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Infoblox_dnsclient \\r\\n| where Computer in ({InfobloxDevice}) or '*' in ({InfobloxDevice})\\r\\n| summarize Response = countif(isnotempty(DnsResponseCode)), Request = countif(isnotempty(DnsQueryClassName) and isempty(DnsResponseCode)), count() by bin(TimeGenerated, {TimeRange:grain})\\r\\n| project-away count_\",\"size\":0,\"showAnnotations\":true,\"title\":\"DNS Requests vs Responses\",\"color\":\"magenta\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"linechart\",\"graphSettings\":{\"type\":0}},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"DNSTab\"},\"customWidth\":\"50\",\"name\":\"query - 6 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Infoblox_dnsclient \\r\\n| where Computer in ({InfobloxDevice}) or '*' in ({InfobloxDevice})\\r\\n| where isnotempty(DnsResponseCode)\\r\\n| summarize count() by tostring(DnsResponseCode), bin(TimeGenerated, {TimeRange:grain})\\r\\n\",\"size\":0,\"title\":\"DNS Response Code\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":3,\"formatOptions\":{\"palette\":\"turquoise\"}}],\"labelSettings\":[{\"columnId\":\"count_\",\"label\":\"Total\"}]}},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"DNSTab\"},\"customWidth\":\"50\",\"name\":\"query - 7 - Copy - Copy\",\"styleSettings\":{\"margin\":\"50\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Infoblox_dnsclient \\r\\n| where Computer in ({InfobloxDevice}) or '*' in ({InfobloxDevice})\\r\\n| where isempty(DnsResponseCode) and isnotempty(DnsQueryClassName)\\r\\n| summarize count() by tostring(SrcIpAddr)\\r\\n| top 10 by count_\",\"size\":0,\"title\":\"Top 10 DNS Request Clients\",\"timeContext\":{\"durationMs\":604800000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":3,\"formatOptions\":{\"palette\":\"turquoise\"}}],\"labelSettings\":[{\"columnId\":\"SrcIpAddr\",\"label\":\"SrcIpAddr\"},{\"columnId\":\"count_\",\"label\":\"Total\"}]}},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"DNSTab\"},\"customWidth\":\"50\",\"name\":\"query - 7\",\"styleSettings\":{\"margin\":\"50\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Infoblox_dnsclient \\r\\n| where Computer in ({InfobloxDevice}) or '*' in ({InfobloxDevice})\\r\\n| where isempty(DnsResponseCode) and isnotempty(DnsQueryClassName)\\r\\n| summarize count() by tostring(DnsQueryClassName)\\r\\n| top 10 by count_\",\"size\":0,\"title\":\"Top 10 DNS Request Domains\",\"timeContext\":{\"durationMs\":604800000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":3,\"formatOptions\":{\"palette\":\"turquoise\"}}],\"labelSettings\":[{\"columnId\":\"DnsQueryClassName\",\"label\":\"Domain Name\"},{\"columnId\":\"count_\",\"label\":\"Total\"}]}},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"DNSTab\"},\"customWidth\":\"50\",\"name\":\"query - 7 - Copy\",\"styleSettings\":{\"margin\":\"50\"}}],\"fromTemplateId\":\"sentinel-InfobloxWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=InfobloxNIOSWorkbook; logoFileName=infoblox_logo.svg; description=Gain insight into Infoblox NIOS by analyzing, collecting and correlating DHCP and DNS data.\nThis workbook provides visibility into DHCP and DNS traffic; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.1.0; title=Infoblox NIOS; templateRelativePath=Infoblox-Workbook-V2.json; subtitle=; provider=Infoblox}.description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Infoblox NIOS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "Syslog",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "InfobloxNIOS",
                      "kind": "DataConnector"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_workbookContentId1')]",
        "contentKind": "Workbook",
        "displayName": "[parameters('workbook1-name')]",
        "contentProductId": "[variables('_workbookcontentProductId1')]",
        "id": "[variables('_workbookcontentProductId1')]",
        "version": "[variables('workbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName1')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox",
                "category": "Samples",
                "functionAlias": "Infoblox",
                "query": "\nunion\r\nInfoblox_dnsclient,Infoblox_dnsgss,Infoblox_dnszone,Infoblox_allotherdnsTypes,Infoblox_dhcpadded, Infoblox_dhcpbindupdate,Infoblox_dhcpdiscover,Infoblox_dhcpexpire,Infoblox_dhcpinform,Infoblox_dhcpoffer,Infoblox_dhcpoption,Infoblox_dhcpother,Infoblox_dhcprelease,Infoblox_dhcpremoved,Infoblox_dhcprequest,Infoblox_dhcpsession,Infoblox_dnsclient,Infoblox_allotherdhcpdTypes",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId1'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName1')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
                "contentId": "[variables('_parserContentId1')]",
                "kind": "Parser",
                "version": "[variables('parserVersion1')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId1')]",
        "contentKind": "Parser",
        "displayName": "Infoblox",
        "contentProductId": "[variables('_parsercontentProductId1')]",
        "id": "[variables('_parsercontentProductId1')]",
        "version": "[variables('parserVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName1')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox",
        "category": "Samples",
        "functionAlias": "Infoblox",
        "query": "\nunion\r\nInfoblox_dnsclient,Infoblox_dnsgss,Infoblox_dnszone,Infoblox_allotherdnsTypes,Infoblox_dhcpadded, Infoblox_dhcpbindupdate,Infoblox_dhcpdiscover,Infoblox_dhcpexpire,Infoblox_dhcpinform,Infoblox_dhcpoffer,Infoblox_dhcpoption,Infoblox_dhcpother,Infoblox_dhcprelease,Infoblox_dhcpremoved,Infoblox_dhcprequest,Infoblox_dhcpsession,Infoblox_dnsclient,Infoblox_allotherdhcpdTypes",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId1'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId1')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName1'))]",
        "contentId": "[variables('_parserContentId1')]",
        "kind": "Parser",
        "version": "[variables('parserVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_allotherdhcpdTypes Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName2')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox_allotherdhcpdTypes",
                "category": "Samples",
                "functionAlias": "Infoblox_allotherdhcpdTypes",
                "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nSyslog \r\n    | where Computer in (datasource)\r\n    | where not(SyslogMessage has_any (\"DHCPEXPIRE\",\"DHCPOFFER\",\"DHCPINFORM\",\"DHCPACK\",\"DHCPDISCOVER\",\"DHCPRELEASE\",\"DHCPACK\",\"r-l-e\", \"bind\",\"Added\",\"Option\", \"Removed\",\"balanced\",\"balancing\",\"failover\"))\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n            Log_Type = tostring(Parser[1])\r\n        | project-away Parser;",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox_allotherdhcpdTypes"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId2'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName2')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName2'))]",
                "contentId": "[variables('_parserContentId2')]",
                "kind": "Parser",
                "version": "[variables('parserVersion2')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId2')]",
        "contentKind": "Parser",
        "displayName": "Infoblox_allotherdhcpdTypes",
        "contentProductId": "[variables('_parsercontentProductId2')]",
        "id": "[variables('_parsercontentProductId2')]",
        "version": "[variables('parserVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName2')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox_allotherdhcpdTypes",
        "category": "Samples",
        "functionAlias": "Infoblox_allotherdhcpdTypes",
        "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nSyslog \r\n    | where Computer in (datasource)\r\n    | where not(SyslogMessage has_any (\"DHCPEXPIRE\",\"DHCPOFFER\",\"DHCPINFORM\",\"DHCPACK\",\"DHCPDISCOVER\",\"DHCPRELEASE\",\"DHCPACK\",\"r-l-e\", \"bind\",\"Added\",\"Option\", \"Removed\",\"balanced\",\"balancing\",\"failover\"))\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n            Log_Type = tostring(Parser[1])\r\n        | project-away Parser;",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox_allotherdhcpdTypes"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId2'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId2')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName2'))]",
        "contentId": "[variables('_parserContentId2')]",
        "kind": "Parser",
        "version": "[variables('parserVersion2')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_allotherdnsTypes Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion3')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName3')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox_allotherdnsTypes",
                "category": "Samples",
                "functionAlias": "Infoblox_allotherdnsTypes",
                "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nSyslog \r\n    | where Computer in (datasource)\r\n    | where not(SyslogMessage has_any (\"client\",\"gss_accept_sec_context\"))\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n            Log_Type = tostring(Parser[1])\r\n    | project-away Parser;",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox_allotherdnsTypes"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId3'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName3')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName3'))]",
                "contentId": "[variables('_parserContentId3')]",
                "kind": "Parser",
                "version": "[variables('parserVersion3')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId3')]",
        "contentKind": "Parser",
        "displayName": "Infoblox_allotherdnsTypes",
        "contentProductId": "[variables('_parsercontentProductId3')]",
        "id": "[variables('_parsercontentProductId3')]",
        "version": "[variables('parserVersion3')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName3')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox_allotherdnsTypes",
        "category": "Samples",
        "functionAlias": "Infoblox_allotherdnsTypes",
        "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nSyslog \r\n    | where Computer in (datasource)\r\n    | where not(SyslogMessage has_any (\"client\",\"gss_accept_sec_context\"))\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n            Log_Type = tostring(Parser[1])\r\n    | project-away Parser;",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox_allotherdnsTypes"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId3'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId3')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName3'))]",
        "contentId": "[variables('_parserContentId3')]",
        "kind": "Parser",
        "version": "[variables('parserVersion3')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_allotherlogTypes Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion4')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName4')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox_allotherlogTypes",
                "category": "Samples",
                "functionAlias": "Infoblox_allotherlogTypes",
                "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nSyslog \r\n    | where Computer in (datasource)\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n            Log_Type = tostring(Parser[1])            \r\n    | project-away Parser;",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox_allotherlogTypes"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId4'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName4')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName4'))]",
                "contentId": "[variables('_parserContentId4')]",
                "kind": "Parser",
                "version": "[variables('parserVersion4')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId4')]",
        "contentKind": "Parser",
        "displayName": "Infoblox_allotherlogTypes",
        "contentProductId": "[variables('_parsercontentProductId4')]",
        "id": "[variables('_parsercontentProductId4')]",
        "version": "[variables('parserVersion4')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName4')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox_allotherlogTypes",
        "category": "Samples",
        "functionAlias": "Infoblox_allotherlogTypes",
        "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nSyslog \r\n    | where Computer in (datasource)\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n            Log_Type = tostring(Parser[1])            \r\n    | project-away Parser;",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox_allotherlogTypes"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId4'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId4')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName4'))]",
        "contentId": "[variables('_parserContentId4')]",
        "kind": "Parser",
        "version": "[variables('parserVersion4')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName5')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcp_consolidated Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion5')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName5')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox_dhcp_consolidated",
                "category": "Samples",
                "functionAlias": "Infoblox_dhcp_consolidated",
                "query": "\nunion\r\nInfoblox_dhcpadded,Infoblox_dhcpbindupdate,Infoblox_dhcpdiscover,Infoblox_dhcpexpire,Infoblox_dhcpinform,Infoblox_dhcpoffer,Infoblox_dhcpoption,Infoblox_dhcpother,Infoblox_dhcprelease,Infoblox_dhcpremoved,Infoblox_dhcprequest,Infoblox_dhcpsession,Infoblox_allotherdhcpdTypes",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox_dhcp_consolidated"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId5'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName5')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName5'))]",
                "contentId": "[variables('_parserContentId5')]",
                "kind": "Parser",
                "version": "[variables('parserVersion5')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId5')]",
        "contentKind": "Parser",
        "displayName": "Infoblox_dhcp_consolidated",
        "contentProductId": "[variables('_parsercontentProductId5')]",
        "id": "[variables('_parsercontentProductId5')]",
        "version": "[variables('parserVersion5')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName5')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox_dhcp_consolidated",
        "category": "Samples",
        "functionAlias": "Infoblox_dhcp_consolidated",
        "query": "\nunion\r\nInfoblox_dhcpadded,Infoblox_dhcpbindupdate,Infoblox_dhcpdiscover,Infoblox_dhcpexpire,Infoblox_dhcpinform,Infoblox_dhcpoffer,Infoblox_dhcpoption,Infoblox_dhcpother,Infoblox_dhcprelease,Infoblox_dhcpremoved,Infoblox_dhcprequest,Infoblox_dhcpsession,Infoblox_allotherdhcpdTypes",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox_dhcp_consolidated"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId5'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId5')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName5'))]",
        "contentId": "[variables('_parserContentId5')]",
        "kind": "Parser",
        "version": "[variables('parserVersion5')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName6')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpack Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion6')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName6')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox_dhcpack",
                "category": "Samples",
                "functionAlias": "Infoblox_dhcpack",
                "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nSyslog\r\n    | where Computer in (datasource) \r\n    | where SyslogMessage startswith_cs \"DHCPACK\"\r\n    | extend Parser = extract_all(@\"^([^\\s]+)\\s(?:on\\s([\\d\\.]+)\\s)?(?:to\\s([^\\s]+)(?:\\s\\(([^\\)]+)\\))?)(?:\\svia\\s([^\\s]+))?(?:\\srelay\\s([^\\s]+))?(?:\\slease-duration\\s([\\d]+))?(?:\\s\\(([^\\)]+)\\))?(?:\\suid\\s([^\\s]+))?\", dynamic([1,2,3,4,5,6,7,8,9]), SyslogMessage)[0]\r\n    | extend responseTime = EventTime,\r\n            Log_Type = tostring(Parser[0]),\r\n            IPAddress = tostring(Parser[1]), \r\n            SrcMacAddr = tostring(Parser[2]),\r\n            SrcHostname = tostring(Parser[3]),\r\n            Interface = tostring(Parser[4]),\r\n            Relay = tostring(Parser[5]), \r\n            LeaseDuration = tostring(Parser[6]),\r\n            State = tostring(Parser[8])\r\n    | project-away Parser\r\n",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox_dhcpack"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId6'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName6')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName6'))]",
                "contentId": "[variables('_parserContentId6')]",
                "kind": "Parser",
                "version": "[variables('parserVersion6')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId6')]",
        "contentKind": "Parser",
        "displayName": "Infoblox_dhcpack",
        "contentProductId": "[variables('_parsercontentProductId6')]",
        "id": "[variables('_parsercontentProductId6')]",
        "version": "[variables('parserVersion6')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName6')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox_dhcpack",
        "category": "Samples",
        "functionAlias": "Infoblox_dhcpack",
        "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nSyslog\r\n    | where Computer in (datasource) \r\n    | where SyslogMessage startswith_cs \"DHCPACK\"\r\n    | extend Parser = extract_all(@\"^([^\\s]+)\\s(?:on\\s([\\d\\.]+)\\s)?(?:to\\s([^\\s]+)(?:\\s\\(([^\\)]+)\\))?)(?:\\svia\\s([^\\s]+))?(?:\\srelay\\s([^\\s]+))?(?:\\slease-duration\\s([\\d]+))?(?:\\s\\(([^\\)]+)\\))?(?:\\suid\\s([^\\s]+))?\", dynamic([1,2,3,4,5,6,7,8,9]), SyslogMessage)[0]\r\n    | extend responseTime = EventTime,\r\n            Log_Type = tostring(Parser[0]),\r\n            IPAddress = tostring(Parser[1]), \r\n            SrcMacAddr = tostring(Parser[2]),\r\n            SrcHostname = tostring(Parser[3]),\r\n            Interface = tostring(Parser[4]),\r\n            Relay = tostring(Parser[5]), \r\n            LeaseDuration = tostring(Parser[6]),\r\n            State = tostring(Parser[8])\r\n    | project-away Parser\r\n",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox_dhcpack"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId6'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId6')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName6'))]",
        "contentId": "[variables('_parserContentId6')]",
        "kind": "Parser",
        "version": "[variables('parserVersion6')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName7')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpadded Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion7')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName7')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox_dhcpadded",
                "category": "Samples",
                "functionAlias": "Infoblox_dhcpadded",
                "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"Added\"\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n             RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;\r\nRawData\r\n    | extend dhcpadded = extract_all(@\"([\\w\\s]+)\\sfrom\\s(\\S+)\\sto\\s(\\S+)\", dynamic([1,2,3,4,5]), RawData_subString)[0]\r\n    | extend Log_Type = strcat(Type,\" \",tostring(dhcpadded[0])),\r\n        Source = tostring(dhcpadded[1]),  \r\n        Dest = tostring(dhcpadded[2])\r\n    | project-away SyslogMessage, dhcpadded, RawData_subString;",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox_dhcpadded"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId7'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName7')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName7'))]",
                "contentId": "[variables('_parserContentId7')]",
                "kind": "Parser",
                "version": "[variables('parserVersion7')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId7')]",
        "contentKind": "Parser",
        "displayName": "Infoblox_dhcpadded",
        "contentProductId": "[variables('_parsercontentProductId7')]",
        "id": "[variables('_parsercontentProductId7')]",
        "version": "[variables('parserVersion7')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName7')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox_dhcpadded",
        "category": "Samples",
        "functionAlias": "Infoblox_dhcpadded",
        "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"Added\"\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n             RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;\r\nRawData\r\n    | extend dhcpadded = extract_all(@\"([\\w\\s]+)\\sfrom\\s(\\S+)\\sto\\s(\\S+)\", dynamic([1,2,3,4,5]), RawData_subString)[0]\r\n    | extend Log_Type = strcat(Type,\" \",tostring(dhcpadded[0])),\r\n        Source = tostring(dhcpadded[1]),  \r\n        Dest = tostring(dhcpadded[2])\r\n    | project-away SyslogMessage, dhcpadded, RawData_subString;",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox_dhcpadded"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId7'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId7')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName7'))]",
        "contentId": "[variables('_parserContentId7')]",
        "kind": "Parser",
        "version": "[variables('parserVersion7')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName8')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpbindupdate Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion8')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName8')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox_dhcpbindupdate",
                "category": "Samples",
                "functionAlias": "Infoblox_dhcpbindupdate",
                "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"bind\"\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n             RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;    \r\nRawData\r\n    | extend dhcpbindupdate = extract_all(@\"^\\s?(\\w+)\\s\\w+\\s([0-9.]+)\\sfrom\\s(\\S+)\\s(\\w+)\\:\\s(.*)\", dynamic([1,2,3,4,5]),  RawData_subString)[0]\r\n    | extend Log_Type = strcat(Type,\" \",tostring(dhcpbindupdate[0])),\r\n        DvcIpAddr = tostring(dhcpbindupdate[1]),  \r\n        Source = tostring(dhcpbindupdate[2]),\r\n        DvcAction = tostring(dhcpbindupdate[3]),  \r\n        EventMessage = tostring(dhcpbindupdate[4])\r\n    | project-away SyslogMessage, dhcpbindupdate,RawData_subString;",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox_dhcpbindupdate"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId8'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName8')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName8'))]",
                "contentId": "[variables('_parserContentId8')]",
                "kind": "Parser",
                "version": "[variables('parserVersion8')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId8')]",
        "contentKind": "Parser",
        "displayName": "Infoblox_dhcpbindupdate",
        "contentProductId": "[variables('_parsercontentProductId8')]",
        "id": "[variables('_parsercontentProductId8')]",
        "version": "[variables('parserVersion8')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName8')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox_dhcpbindupdate",
        "category": "Samples",
        "functionAlias": "Infoblox_dhcpbindupdate",
        "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"bind\"\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n             RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;    \r\nRawData\r\n    | extend dhcpbindupdate = extract_all(@\"^\\s?(\\w+)\\s\\w+\\s([0-9.]+)\\sfrom\\s(\\S+)\\s(\\w+)\\:\\s(.*)\", dynamic([1,2,3,4,5]),  RawData_subString)[0]\r\n    | extend Log_Type = strcat(Type,\" \",tostring(dhcpbindupdate[0])),\r\n        DvcIpAddr = tostring(dhcpbindupdate[1]),  \r\n        Source = tostring(dhcpbindupdate[2]),\r\n        DvcAction = tostring(dhcpbindupdate[3]),  \r\n        EventMessage = tostring(dhcpbindupdate[4])\r\n    | project-away SyslogMessage, dhcpbindupdate,RawData_subString;",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox_dhcpbindupdate"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId8'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId8')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName8'))]",
        "contentId": "[variables('_parserContentId8')]",
        "kind": "Parser",
        "version": "[variables('parserVersion8')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName9')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpdiscover Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion9')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName9')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox_dhcpdiscover",
                "category": "Samples",
                "functionAlias": "Infoblox_dhcpdiscover",
                "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nSyslog\r\n    | where Computer in (datasource) \r\n    | where SyslogMessage startswith_cs \"DHCPDISCOVER\"\r\n    | extend responseTime = EventTime\r\n    | extend Parser = extract_all(@\"^(\\w+)\\sfrom\\s([a-z0-9\\:]+)(?:\\s\\(([^\\)]+)\\)|)(?:\\svia\\s([^\\s\\:]+[^\\:\\s]))(?:\\sTransID\\s([^\\s\\:]+)?)?(?:\\suid\\s([\\S]+))?(?:\\:?\\snetwork\\s([^\\s\\:]+)?)?(:?\\:\\s(.*))?\", dynamic([1,2,3,4,5,6,7,8,9,10]), SyslogMessage)[0]\r\n    | extend Log_Type = tostring(Parser[0]),\r\n        SrcMacAddr = tostring(Parser[1]), \r\n        SrcHostName = tostring(Parser[2]), \r\n        SrcRouterAddress = tostring(Parser[3]), \r\n        DhcpSessionId = tostring(Parser[4]),\r\n        SrcUserIdType = tostring(Parser[5]), \r\n        Network = tostring(Parser[6]),\r\n        EventMessage = tostring(Parser[8])\r\n    | project-away SrcHostName,SrcRouterAddress,Parser;\r\n",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox_dhcpdiscover"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId9'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName9')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName9'))]",
                "contentId": "[variables('_parserContentId9')]",
                "kind": "Parser",
                "version": "[variables('parserVersion9')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId9')]",
        "contentKind": "Parser",
        "displayName": "Infoblox_dhcpdiscover",
        "contentProductId": "[variables('_parsercontentProductId9')]",
        "id": "[variables('_parsercontentProductId9')]",
        "version": "[variables('parserVersion9')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName9')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox_dhcpdiscover",
        "category": "Samples",
        "functionAlias": "Infoblox_dhcpdiscover",
        "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nSyslog\r\n    | where Computer in (datasource) \r\n    | where SyslogMessage startswith_cs \"DHCPDISCOVER\"\r\n    | extend responseTime = EventTime\r\n    | extend Parser = extract_all(@\"^(\\w+)\\sfrom\\s([a-z0-9\\:]+)(?:\\s\\(([^\\)]+)\\)|)(?:\\svia\\s([^\\s\\:]+[^\\:\\s]))(?:\\sTransID\\s([^\\s\\:]+)?)?(?:\\suid\\s([\\S]+))?(?:\\:?\\snetwork\\s([^\\s\\:]+)?)?(:?\\:\\s(.*))?\", dynamic([1,2,3,4,5,6,7,8,9,10]), SyslogMessage)[0]\r\n    | extend Log_Type = tostring(Parser[0]),\r\n        SrcMacAddr = tostring(Parser[1]), \r\n        SrcHostName = tostring(Parser[2]), \r\n        SrcRouterAddress = tostring(Parser[3]), \r\n        DhcpSessionId = tostring(Parser[4]),\r\n        SrcUserIdType = tostring(Parser[5]), \r\n        Network = tostring(Parser[6]),\r\n        EventMessage = tostring(Parser[8])\r\n    | project-away SrcHostName,SrcRouterAddress,Parser;\r\n",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox_dhcpdiscover"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId9'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId9')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName9'))]",
        "contentId": "[variables('_parserContentId9')]",
        "kind": "Parser",
        "version": "[variables('parserVersion9')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName10')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpexpire Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion10')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName10')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox_dhcpexpire",
                "category": "Samples",
                "functionAlias": "Infoblox_dhcpexpire",
                "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"DHCPEXPIRE\"\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n            Log_Type = tostring(Parser[1]),\r\n            RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;\r\nRawData\r\n    | extend dhcpexpire = extract_all(@\"\\w+\\s(\\S+)\\s\\w+\\s(\\S+)\", dynamic([1,2]), RawData_subString)[0]\r\n    | extend SrcIpAddr = tostring(dhcpexpire[0]),  \r\n        DvcMacAddr = tostring(dhcpexpire[1])        \r\n    | project-away SyslogMessage, dhcpexpire, RawData_subString;",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox_dhcpexpire"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId10'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName10')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName10'))]",
                "contentId": "[variables('_parserContentId10')]",
                "kind": "Parser",
                "version": "[variables('parserVersion10')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId10')]",
        "contentKind": "Parser",
        "displayName": "Infoblox_dhcpexpire",
        "contentProductId": "[variables('_parsercontentProductId10')]",
        "id": "[variables('_parsercontentProductId10')]",
        "version": "[variables('parserVersion10')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName10')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox_dhcpexpire",
        "category": "Samples",
        "functionAlias": "Infoblox_dhcpexpire",
        "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"DHCPEXPIRE\"\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n            Log_Type = tostring(Parser[1]),\r\n            RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;\r\nRawData\r\n    | extend dhcpexpire = extract_all(@\"\\w+\\s(\\S+)\\s\\w+\\s(\\S+)\", dynamic([1,2]), RawData_subString)[0]\r\n    | extend SrcIpAddr = tostring(dhcpexpire[0]),  \r\n        DvcMacAddr = tostring(dhcpexpire[1])        \r\n    | project-away SyslogMessage, dhcpexpire, RawData_subString;",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox_dhcpexpire"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId10'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId10')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName10'))]",
        "contentId": "[variables('_parserContentId10')]",
        "kind": "Parser",
        "version": "[variables('parserVersion10')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName11')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpinform Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion11')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName11')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox_dhcpinform",
                "category": "Samples",
                "functionAlias": "Infoblox_dhcpinform",
                "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"DHCPINFORM\"\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n            Log_Type = tostring(Parser[1]),\r\n            RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;\r\nRawData\r\n    | extend dhcpinform = extract_all(@\"\\w+\\s(\\S+)\\svia\\s(\\S+)\\sTransID\\s([a-z0-9]+)\", dynamic([1,2,3]), RawData_subString)[0]\r\n    | extend SrcIpAddr = tostring(dhcpinform[0]), \r\n        Relay = tostring(dhcpinform[1]), \r\n        DhcpSessionId = tostring(dhcpinform[2])        \r\n    | project-away SyslogMessage, dhcpinform,RawData_subString;",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox_dhcpinform"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId11'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName11')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName11'))]",
                "contentId": "[variables('_parserContentId11')]",
                "kind": "Parser",
                "version": "[variables('parserVersion11')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId11')]",
        "contentKind": "Parser",
        "displayName": "Infoblox_dhcpinform",
        "contentProductId": "[variables('_parsercontentProductId11')]",
        "id": "[variables('_parsercontentProductId11')]",
        "version": "[variables('parserVersion11')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName11')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox_dhcpinform",
        "category": "Samples",
        "functionAlias": "Infoblox_dhcpinform",
        "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"DHCPINFORM\"\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n            Log_Type = tostring(Parser[1]),\r\n            RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;\r\nRawData\r\n    | extend dhcpinform = extract_all(@\"\\w+\\s(\\S+)\\svia\\s(\\S+)\\sTransID\\s([a-z0-9]+)\", dynamic([1,2,3]), RawData_subString)[0]\r\n    | extend SrcIpAddr = tostring(dhcpinform[0]), \r\n        Relay = tostring(dhcpinform[1]), \r\n        DhcpSessionId = tostring(dhcpinform[2])        \r\n    | project-away SyslogMessage, dhcpinform,RawData_subString;",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox_dhcpinform"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId11'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId11')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName11'))]",
        "contentId": "[variables('_parserContentId11')]",
        "kind": "Parser",
        "version": "[variables('parserVersion11')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName12')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpoffer Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion12')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName12')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox_dhcpoffer",
                "category": "Samples",
                "functionAlias": "Infoblox_dhcpoffer",
                "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"DHCPOFFER\"\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n            Log_Type = tostring(Parser[1]),\r\n            RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;\r\nRawData\r\n    | extend dhcpoffer = extract_all(@\"\\w+\\s(\\S+)(\\s\\w+\\s((\\S+)(\\s\\(\\S+\\))?))?\\svia\\s(\\S+)(\\srelay\\s(\\S+))?(\\slease-duration\\s(\\d+))?(\\soffered-duration\\s(\\d+))?(\\sUID\\s(\\S+))?\", dynamic([1,2,3,4,5,6,7,8,9,10,11,12,13,14]), RawData_subString)[0]\r\n    | extend SrcIpAddr = tostring(dhcpoffer[0]),  \r\n        SrcMacAddr = tostring(dhcpoffer[3]),\r\n        Interface = tostring(dhcpoffer[5]),\r\n        Relay = tostring(dhcpoffer[7]), \r\n        LeaseDuration = tostring(dhcpoffer[9]),\r\n        OfferedDuration = tostring(dhcpoffer[11]),\r\n        SrcHostname = tostring(dhcpoffer[4]),\r\n        SrcUserIdType = tostring(dhcpoffer[13])\r\n       | project-away SyslogMessage, dhcpoffer,RawData_subString;",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox_dhcpoffer"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId12'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName12')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName12'))]",
                "contentId": "[variables('_parserContentId12')]",
                "kind": "Parser",
                "version": "[variables('parserVersion12')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId12')]",
        "contentKind": "Parser",
        "displayName": "Infoblox_dhcpoffer",
        "contentProductId": "[variables('_parsercontentProductId12')]",
        "id": "[variables('_parsercontentProductId12')]",
        "version": "[variables('parserVersion12')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName12')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox_dhcpoffer",
        "category": "Samples",
        "functionAlias": "Infoblox_dhcpoffer",
        "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"DHCPOFFER\"\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n            Log_Type = tostring(Parser[1]),\r\n            RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;\r\nRawData\r\n    | extend dhcpoffer = extract_all(@\"\\w+\\s(\\S+)(\\s\\w+\\s((\\S+)(\\s\\(\\S+\\))?))?\\svia\\s(\\S+)(\\srelay\\s(\\S+))?(\\slease-duration\\s(\\d+))?(\\soffered-duration\\s(\\d+))?(\\sUID\\s(\\S+))?\", dynamic([1,2,3,4,5,6,7,8,9,10,11,12,13,14]), RawData_subString)[0]\r\n    | extend SrcIpAddr = tostring(dhcpoffer[0]),  \r\n        SrcMacAddr = tostring(dhcpoffer[3]),\r\n        Interface = tostring(dhcpoffer[5]),\r\n        Relay = tostring(dhcpoffer[7]), \r\n        LeaseDuration = tostring(dhcpoffer[9]),\r\n        OfferedDuration = tostring(dhcpoffer[11]),\r\n        SrcHostname = tostring(dhcpoffer[4]),\r\n        SrcUserIdType = tostring(dhcpoffer[13])\r\n       | project-away SyslogMessage, dhcpoffer,RawData_subString;",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox_dhcpoffer"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId12'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId12')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName12'))]",
        "contentId": "[variables('_parserContentId12')]",
        "kind": "Parser",
        "version": "[variables('parserVersion12')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName13')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpoption Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion13')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName13')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox_dhcpoption",
                "category": "Samples",
                "functionAlias": "Infoblox_dhcpoption",
                "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"Option\"\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n             RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;\r\nRawData\r\n    | extend dhcpoption = extract_all(@'(\\d+)\\:\\s\\w+\\s\\w+\\s([A-Z\\s]+)\\s\\w+\\sfrom\\s\\S+\\s(\\S+)\\s[\\w\\s\\-]+\\\"([a-z0-9:]+)\\\"\\,\\s[\\w\\s\\-]+\\\"([a-z0-9:]+)\\\"\\sfor\\s(\\S+)\\s\\((\\S+)\\)\\s([\\w\\s]+)\\.\\s\\((\\S+)\\)', dynamic([1,2,3,4,5,6,7,8,9]), RawData_subString)[0]\r\n    | extend Log_Type = strcat(Type,\" \",tostring(dhcpoption[0])),\r\n        Relay = tostring(dhcpoption[2]),  \r\n        PacketType = tostring(dhcpoption[1]),  \r\n        CircuitID = tostring(dhcpoption[3]),  \r\n        RemoteID = tostring(dhcpoption[4]),  \r\n        DvcIpAddr = tostring(dhcpoption[5]),  \r\n        DvcMacAddr = tostring(dhcpoption[6]),  \r\n        EventMessage = tostring(dhcpoption[7]),\r\n        State = tostring(dhcpoption[8])\r\n    | project-away SyslogMessage, dhcpoption,RawData_subString;",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox_dhcpoption"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId13'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName13')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName13'))]",
                "contentId": "[variables('_parserContentId13')]",
                "kind": "Parser",
                "version": "[variables('parserVersion13')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId13')]",
        "contentKind": "Parser",
        "displayName": "Infoblox_dhcpoption",
        "contentProductId": "[variables('_parsercontentProductId13')]",
        "id": "[variables('_parsercontentProductId13')]",
        "version": "[variables('parserVersion13')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName13')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox_dhcpoption",
        "category": "Samples",
        "functionAlias": "Infoblox_dhcpoption",
        "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"Option\"\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n             RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;\r\nRawData\r\n    | extend dhcpoption = extract_all(@'(\\d+)\\:\\s\\w+\\s\\w+\\s([A-Z\\s]+)\\s\\w+\\sfrom\\s\\S+\\s(\\S+)\\s[\\w\\s\\-]+\\\"([a-z0-9:]+)\\\"\\,\\s[\\w\\s\\-]+\\\"([a-z0-9:]+)\\\"\\sfor\\s(\\S+)\\s\\((\\S+)\\)\\s([\\w\\s]+)\\.\\s\\((\\S+)\\)', dynamic([1,2,3,4,5,6,7,8,9]), RawData_subString)[0]\r\n    | extend Log_Type = strcat(Type,\" \",tostring(dhcpoption[0])),\r\n        Relay = tostring(dhcpoption[2]),  \r\n        PacketType = tostring(dhcpoption[1]),  \r\n        CircuitID = tostring(dhcpoption[3]),  \r\n        RemoteID = tostring(dhcpoption[4]),  \r\n        DvcIpAddr = tostring(dhcpoption[5]),  \r\n        DvcMacAddr = tostring(dhcpoption[6]),  \r\n        EventMessage = tostring(dhcpoption[7]),\r\n        State = tostring(dhcpoption[8])\r\n    | project-away SyslogMessage, dhcpoption,RawData_subString;",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox_dhcpoption"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId13'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId13')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName13'))]",
        "contentId": "[variables('_parserContentId13')]",
        "kind": "Parser",
        "version": "[variables('parserVersion13')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName14')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpother Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion14')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName14')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox_dhcpother",
                "category": "Samples",
                "functionAlias": "Infoblox_dhcpother",
                "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nSyslog\r\n    | where Computer in (datasource)\r\n    | where not(SyslogMessage has_any (\"balanced\",\"balancing\",\"failover\"))\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n            Log_Type = tostring(Parser[1])\r\n    | project-away Parser;",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox_dhcpother"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId14'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName14')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName14'))]",
                "contentId": "[variables('_parserContentId14')]",
                "kind": "Parser",
                "version": "[variables('parserVersion14')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId14')]",
        "contentKind": "Parser",
        "displayName": "Infoblox_dhcpother",
        "contentProductId": "[variables('_parsercontentProductId14')]",
        "id": "[variables('_parsercontentProductId14')]",
        "version": "[variables('parserVersion14')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName14')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox_dhcpother",
        "category": "Samples",
        "functionAlias": "Infoblox_dhcpother",
        "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nSyslog\r\n    | where Computer in (datasource)\r\n    | where not(SyslogMessage has_any (\"balanced\",\"balancing\",\"failover\"))\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n            Log_Type = tostring(Parser[1])\r\n    | project-away Parser;",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox_dhcpother"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId14'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId14')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName14'))]",
        "contentId": "[variables('_parserContentId14')]",
        "kind": "Parser",
        "version": "[variables('parserVersion14')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName15')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcprelease Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion15')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName15')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox_dhcprelease",
                "category": "Samples",
                "functionAlias": "Infoblox_dhcprelease",
                "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n   | where Computer in (datasource)\r\n   | where SyslogMessage has \"DHCPRELEASE\"\r\n   | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n   | extend responseTime = todatetime(Parser[0]),\r\n            Log_Type = tostring(Parser[1]),\r\n            RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;\r\nRawData\r\n   | extend dhcprelease = extract_all(@\"of\\s(\\S+)\\sfrom\\s((\\S+)(\\s\\(\\S+\\))?)\\svia\\s(\\S+)(\\s\\((\\w+)\\))?(\\sTransID\\s([a-z0-9]+)\\s)?\", dynamic([1,2,3,4,5,6,7,8,9,10,11,12]), RawData_subString)[0]\r\n    | extend SrcIpAddr = tostring(dhcprelease[0]), \r\n        SrcMacAddr = tostring(dhcprelease[2]),\r\n        SrcHostname = extract(@'\\((\\S+)\\)',1,tostring(dhcprelease[3])),\r\n        Relay = tostring(dhcprelease[4]), \r\n        DhcpSessionId = tostring(dhcprelease[8]),\r\n        State = tostring(dhcprelease[6])       \r\n    | project-away SyslogMessage, dhcprelease,RawData_subString;",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox_dhcprelease"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId15'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName15')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName15'))]",
                "contentId": "[variables('_parserContentId15')]",
                "kind": "Parser",
                "version": "[variables('parserVersion15')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId15')]",
        "contentKind": "Parser",
        "displayName": "Infoblox_dhcprelease",
        "contentProductId": "[variables('_parsercontentProductId15')]",
        "id": "[variables('_parsercontentProductId15')]",
        "version": "[variables('parserVersion15')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName15')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox_dhcprelease",
        "category": "Samples",
        "functionAlias": "Infoblox_dhcprelease",
        "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n   | where Computer in (datasource)\r\n   | where SyslogMessage has \"DHCPRELEASE\"\r\n   | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n   | extend responseTime = todatetime(Parser[0]),\r\n            Log_Type = tostring(Parser[1]),\r\n            RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;\r\nRawData\r\n   | extend dhcprelease = extract_all(@\"of\\s(\\S+)\\sfrom\\s((\\S+)(\\s\\(\\S+\\))?)\\svia\\s(\\S+)(\\s\\((\\w+)\\))?(\\sTransID\\s([a-z0-9]+)\\s)?\", dynamic([1,2,3,4,5,6,7,8,9,10,11,12]), RawData_subString)[0]\r\n    | extend SrcIpAddr = tostring(dhcprelease[0]), \r\n        SrcMacAddr = tostring(dhcprelease[2]),\r\n        SrcHostname = extract(@'\\((\\S+)\\)',1,tostring(dhcprelease[3])),\r\n        Relay = tostring(dhcprelease[4]), \r\n        DhcpSessionId = tostring(dhcprelease[8]),\r\n        State = tostring(dhcprelease[6])       \r\n    | project-away SyslogMessage, dhcprelease,RawData_subString;",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox_dhcprelease"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId15'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId15')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName15'))]",
        "contentId": "[variables('_parserContentId15')]",
        "kind": "Parser",
        "version": "[variables('parserVersion15')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName16')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpremoved Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion16')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName16')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox_dhcpremoved",
                "category": "Samples",
                "functionAlias": "Infoblox_dhcpremoved",
                "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"Removed\"\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n             RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;\r\nRawData\r\n    | extend dhcpremoved = extract_all(@\"([\\w\\s]+)(from|on)\\s(\\S+)(\\sto\\s(\\S+))?\", dynamic([1,2,3,4,5]), RawData_subString)[0]\r\n    | extend Log_Type = strcat(Type,\" \",tostring(dhcpremoved[0])),\r\n        SrcHostname = tostring(dhcpremoved[2]),  \r\n        DvcHostname = tostring(dhcpremoved[4])\r\n    | project-away SyslogMessage, dhcpremoved, RawData_subString;",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox_dhcpremoved"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId16'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName16')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName16'))]",
                "contentId": "[variables('_parserContentId16')]",
                "kind": "Parser",
                "version": "[variables('parserVersion16')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId16')]",
        "contentKind": "Parser",
        "displayName": "Infoblox_dhcpremoved",
        "contentProductId": "[variables('_parsercontentProductId16')]",
        "id": "[variables('_parsercontentProductId16')]",
        "version": "[variables('parserVersion16')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName16')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox_dhcpremoved",
        "category": "Samples",
        "functionAlias": "Infoblox_dhcpremoved",
        "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"Removed\"\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n             RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;\r\nRawData\r\n    | extend dhcpremoved = extract_all(@\"([\\w\\s]+)(from|on)\\s(\\S+)(\\sto\\s(\\S+))?\", dynamic([1,2,3,4,5]), RawData_subString)[0]\r\n    | extend Log_Type = strcat(Type,\" \",tostring(dhcpremoved[0])),\r\n        SrcHostname = tostring(dhcpremoved[2]),  \r\n        DvcHostname = tostring(dhcpremoved[4])\r\n    | project-away SyslogMessage, dhcpremoved, RawData_subString;",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox_dhcpremoved"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId16'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId16')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName16'))]",
        "contentId": "[variables('_parserContentId16')]",
        "kind": "Parser",
        "version": "[variables('parserVersion16')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName17')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcprequest Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion17')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName17')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox_dhcprequest",
                "category": "Samples",
                "functionAlias": "Infoblox_dhcprequest",
                "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog \r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"DHCPREQUEST\"\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n             Log_Type = tostring(Parser[1]),\r\n             RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;\r\nRawData\r\n    | extend dhcprequest = extract_all(@\"for\\s((\\S+)(\\s\\(\\S+\\))?)\\sfrom\\s((\\S+)(\\s\\(\\S+\\))?)\\svia\\s(\\S+)(\\sTransID\\s([a-z0-9]+)\\s)?(uid\\s([a-z0-9:]+)|uid$|uid)?(\\s\\(([a-zA-Z]+)\\)$)?\", dynamic([1,2,3,4,5,6,7,8,9,10,11,12]), RawData_subString)[0]\r\n    | extend SrcIpAddr = tostring(dhcprequest[1]), \r\n        SrcMacAddr = tostring(dhcprequest[4]),\r\n        SrcHostname = extract(@\"\\((\\S+)\\)\",1,tostring(dhcprequest[5])),\r\n        Relay = tostring(dhcprequest[6]), \r\n        DhcpSessionId = tostring(dhcprequest[8]),\r\n        SrcUserIdType = tostring(dhcprequest[10]),\r\n        State = tostring(dhcprequest[11])        \r\n    | project-away SyslogMessage, dhcprequest,RawData_subString;",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox_dhcprequest"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId17'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName17')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName17'))]",
                "contentId": "[variables('_parserContentId17')]",
                "kind": "Parser",
                "version": "[variables('parserVersion17')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId17')]",
        "contentKind": "Parser",
        "displayName": "Infoblox_dhcprequest",
        "contentProductId": "[variables('_parsercontentProductId17')]",
        "id": "[variables('_parsercontentProductId17')]",
        "version": "[variables('parserVersion17')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName17')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox_dhcprequest",
        "category": "Samples",
        "functionAlias": "Infoblox_dhcprequest",
        "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog \r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"DHCPREQUEST\"\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n             Log_Type = tostring(Parser[1]),\r\n             RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;\r\nRawData\r\n    | extend dhcprequest = extract_all(@\"for\\s((\\S+)(\\s\\(\\S+\\))?)\\sfrom\\s((\\S+)(\\s\\(\\S+\\))?)\\svia\\s(\\S+)(\\sTransID\\s([a-z0-9]+)\\s)?(uid\\s([a-z0-9:]+)|uid$|uid)?(\\s\\(([a-zA-Z]+)\\)$)?\", dynamic([1,2,3,4,5,6,7,8,9,10,11,12]), RawData_subString)[0]\r\n    | extend SrcIpAddr = tostring(dhcprequest[1]), \r\n        SrcMacAddr = tostring(dhcprequest[4]),\r\n        SrcHostname = extract(@\"\\((\\S+)\\)\",1,tostring(dhcprequest[5])),\r\n        Relay = tostring(dhcprequest[6]), \r\n        DhcpSessionId = tostring(dhcprequest[8]),\r\n        SrcUserIdType = tostring(dhcprequest[10]),\r\n        State = tostring(dhcprequest[11])        \r\n    | project-away SyslogMessage, dhcprequest,RawData_subString;",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox_dhcprequest"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId17'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId17')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName17'))]",
        "contentId": "[variables('_parserContentId17')]",
        "kind": "Parser",
        "version": "[variables('parserVersion17')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName18')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dhcpsession Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion18')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName18')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox_dhcpsession",
                "category": "Samples",
                "functionAlias": "Infoblox_dhcpsession",
                "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"r-l-e\"\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n             Log_Type = tostring(Parser[1]),\r\n             RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;\r\nRawData\r\n    | extend dhcpsession = extract_all(@\"\\:?([0-9.]+)\\,([a-zA-Z]+)\\,([a-zA-Z0-9-]+)\\,([a-z0-9:]+)\\,([0-9]+)\\,([0-9]+)\\,([0-9]+)?\\,([\\w$\\s]+)\\,([0-9.]+)\\,([0-9]+)\\,([0-9-.]+)\", dynamic([1,2,3,4,5,6,7,8,9,10,11]), RawData_subString)[0]\r\n    | extend DvcIpAddr = tostring(dhcpsession[0]),  \r\n        Signature = tostring(dhcpsession[1]),\r\n        SrcHostname = tostring(dhcpsession[2]),  \r\n        DvcMacAddr = tostring(dhcpsession[3]),\r\n        StartTime = tostring(dhcpsession[4]),  \r\n        EndTime = tostring(dhcpsession[5]),  \r\n        Network = tostring(dhcpsession[8]),\r\n        NetworkRange = tostring(dhcpsession[10])\r\n    | project-away SyslogMessage, dhcpsession,RawData_subString;",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox_dhcpsession"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId18'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName18')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName18'))]",
                "contentId": "[variables('_parserContentId18')]",
                "kind": "Parser",
                "version": "[variables('parserVersion18')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId18')]",
        "contentKind": "Parser",
        "displayName": "Infoblox_dhcpsession",
        "contentProductId": "[variables('_parsercontentProductId18')]",
        "id": "[variables('_parsercontentProductId18')]",
        "version": "[variables('parserVersion18')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName18')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox_dhcpsession",
        "category": "Samples",
        "functionAlias": "Infoblox_dhcpsession",
        "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"r-l-e\"\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n             Log_Type = tostring(Parser[1]),\r\n             RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;\r\nRawData\r\n    | extend dhcpsession = extract_all(@\"\\:?([0-9.]+)\\,([a-zA-Z]+)\\,([a-zA-Z0-9-]+)\\,([a-z0-9:]+)\\,([0-9]+)\\,([0-9]+)\\,([0-9]+)?\\,([\\w$\\s]+)\\,([0-9.]+)\\,([0-9]+)\\,([0-9-.]+)\", dynamic([1,2,3,4,5,6,7,8,9,10,11]), RawData_subString)[0]\r\n    | extend DvcIpAddr = tostring(dhcpsession[0]),  \r\n        Signature = tostring(dhcpsession[1]),\r\n        SrcHostname = tostring(dhcpsession[2]),  \r\n        DvcMacAddr = tostring(dhcpsession[3]),\r\n        StartTime = tostring(dhcpsession[4]),  \r\n        EndTime = tostring(dhcpsession[5]),  \r\n        Network = tostring(dhcpsession[8]),\r\n        NetworkRange = tostring(dhcpsession[10])\r\n    | project-away SyslogMessage, dhcpsession,RawData_subString;",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox_dhcpsession"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId18'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId18')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName18'))]",
        "contentId": "[variables('_parserContentId18')]",
        "kind": "Parser",
        "version": "[variables('parserVersion18')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName19')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dns_consolidated Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion19')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName19')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox_dns_consolidated",
                "category": "Samples",
                "functionAlias": "Infoblox_dns_consolidated",
                "query": "\nunion\r\nInfoblox_dnsclient,Infoblox_dnsgss,Infoblox_dnszone",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox_dns_consolidated"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId19'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName19')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName19'))]",
                "contentId": "[variables('_parserContentId19')]",
                "kind": "Parser",
                "version": "[variables('parserVersion19')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId19')]",
        "contentKind": "Parser",
        "displayName": "Infoblox_dns_consolidated",
        "contentProductId": "[variables('_parsercontentProductId19')]",
        "id": "[variables('_parsercontentProductId19')]",
        "version": "[variables('parserVersion19')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName19')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox_dns_consolidated",
        "category": "Samples",
        "functionAlias": "Infoblox_dns_consolidated",
        "query": "\nunion\r\nInfoblox_dnsclient,Infoblox_dnsgss,Infoblox_dnszone",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox_dns_consolidated"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId19'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId19')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName19'))]",
        "contentId": "[variables('_parserContentId19')]",
        "kind": "Parser",
        "version": "[variables('parserVersion19')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName20')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dnsclient Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion20')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName20')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox_dnsclient",
                "category": "Samples",
                "functionAlias": "Infoblox_dnsclient",
                "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet response =\r\n    Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has_all (\"client\", \"query:\", \"response:\")\r\n    | parse SyslogMessage with *\r\n        \"client \" SrcIpAddr: string\r\n        \"#\" SrcPortNumber: string\r\n        \" \" NetworkProtocol: string\r\n        \": query: \" DnsQuery: string\r\n        \" \" DnsQueryClassName: string\r\n        \" \" DnsQueryType: string\r\n        \" response: \" DnsResponseCode: string\r\n        \" \" DnsFlags: string\r\n    | extend DnsResponseNameIndex= indexof(DnsFlags, \" \")\r\n    | extend EventMessage =iif(DnsResponseNameIndex != \"-1\", substring(DnsFlags, DnsResponseNameIndex+1), \"\")\r\n    | extend DnsFlags =iif(DnsResponseNameIndex != \"-1\", substring(DnsFlags, 0, DnsResponseNameIndex), DnsFlags)\r\n    | extend SrcPortNumber = iif(SrcPortNumber has ':',replace_string(SrcPortNumber,':',''),SrcPortNumber)\r\n    | extend SrcPortNumber = toint(SrcPortNumber)\r\n    | extend EventSubType = \"response\"\r\n    | project-away DnsResponseNameIndex,SyslogMessage;\r\nlet request =\r\n    Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has_all (\"client\", \"query:\")\r\n        and SyslogMessage !has \"response:\"\r\n    | extend SyslogMessage = (split(SyslogMessage,\"client \"))[1]\r\n    | extend SyslogMessage = iif(SyslogMessage startswith \"@\", (substring(SyslogMessage, indexof(SyslogMessage, \" \")+1)), SyslogMessage)\r\n    | extend SyslogMessage = replace_string(SyslogMessage,\"\\\\ \",\"@@@\")\r\n    | parse SyslogMessage with \r\n        SrcIpAddr: string\r\n        \"#\" SrcPortNumber: int *\r\n        \"query: \" DnsQuery: string\r\n        \" \" DnsQueryClassName: string\r\n        \" \" DnsQueryType: string\r\n        \" \" DnsFlags: string\r\n    | extend DnsQuery = replace_string (DnsQuery, '@@@', ' ')\r\n    | extend DnsFlags= tostring((split(DnsFlags,\" \"))[0])\r\n    | extend EventSubType = \"request\",DnsResponseCode = \"NA\"\r\n    | project-away SyslogMessage\r\n    ;\r\nlet Infoblox_NIOS_ParsedData =\r\n    union response, request\r\n    | extend\r\n        EventProduct=\"NIOS\",\r\n        EventVendor=\"Infoblox\",\r\n        EventType=\"Query\",\r\n        EventResult=iff(EventSubType==\"request\" or DnsResponseCode==\"NOERROR\",\"Success\",\"Failure\"),\r\n        Log_Type=\"client\",\r\n        responseTime=EventTime;\r\nInfoblox_NIOS_ParsedData",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox_dnsclient"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId20'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName20')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName20'))]",
                "contentId": "[variables('_parserContentId20')]",
                "kind": "Parser",
                "version": "[variables('parserVersion20')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId20')]",
        "contentKind": "Parser",
        "displayName": "Infoblox_dnsclient",
        "contentProductId": "[variables('_parsercontentProductId20')]",
        "id": "[variables('_parsercontentProductId20')]",
        "version": "[variables('parserVersion20')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName20')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox_dnsclient",
        "category": "Samples",
        "functionAlias": "Infoblox_dnsclient",
        "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet response =\r\n    Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has_all (\"client\", \"query:\", \"response:\")\r\n    | parse SyslogMessage with *\r\n        \"client \" SrcIpAddr: string\r\n        \"#\" SrcPortNumber: string\r\n        \" \" NetworkProtocol: string\r\n        \": query: \" DnsQuery: string\r\n        \" \" DnsQueryClassName: string\r\n        \" \" DnsQueryType: string\r\n        \" response: \" DnsResponseCode: string\r\n        \" \" DnsFlags: string\r\n    | extend DnsResponseNameIndex= indexof(DnsFlags, \" \")\r\n    | extend EventMessage =iif(DnsResponseNameIndex != \"-1\", substring(DnsFlags, DnsResponseNameIndex+1), \"\")\r\n    | extend DnsFlags =iif(DnsResponseNameIndex != \"-1\", substring(DnsFlags, 0, DnsResponseNameIndex), DnsFlags)\r\n    | extend SrcPortNumber = iif(SrcPortNumber has ':',replace_string(SrcPortNumber,':',''),SrcPortNumber)\r\n    | extend SrcPortNumber = toint(SrcPortNumber)\r\n    | extend EventSubType = \"response\"\r\n    | project-away DnsResponseNameIndex,SyslogMessage;\r\nlet request =\r\n    Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has_all (\"client\", \"query:\")\r\n        and SyslogMessage !has \"response:\"\r\n    | extend SyslogMessage = (split(SyslogMessage,\"client \"))[1]\r\n    | extend SyslogMessage = iif(SyslogMessage startswith \"@\", (substring(SyslogMessage, indexof(SyslogMessage, \" \")+1)), SyslogMessage)\r\n    | extend SyslogMessage = replace_string(SyslogMessage,\"\\\\ \",\"@@@\")\r\n    | parse SyslogMessage with \r\n        SrcIpAddr: string\r\n        \"#\" SrcPortNumber: int *\r\n        \"query: \" DnsQuery: string\r\n        \" \" DnsQueryClassName: string\r\n        \" \" DnsQueryType: string\r\n        \" \" DnsFlags: string\r\n    | extend DnsQuery = replace_string (DnsQuery, '@@@', ' ')\r\n    | extend DnsFlags= tostring((split(DnsFlags,\" \"))[0])\r\n    | extend EventSubType = \"request\",DnsResponseCode = \"NA\"\r\n    | project-away SyslogMessage\r\n    ;\r\nlet Infoblox_NIOS_ParsedData =\r\n    union response, request\r\n    | extend\r\n        EventProduct=\"NIOS\",\r\n        EventVendor=\"Infoblox\",\r\n        EventType=\"Query\",\r\n        EventResult=iff(EventSubType==\"request\" or DnsResponseCode==\"NOERROR\",\"Success\",\"Failure\"),\r\n        Log_Type=\"client\",\r\n        responseTime=EventTime;\r\nInfoblox_NIOS_ParsedData",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox_dnsclient"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId20'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId20')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName20'))]",
        "contentId": "[variables('_parserContentId20')]",
        "kind": "Parser",
        "version": "[variables('parserVersion20')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName21')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dnsgss Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion21')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName21')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox_dnsgss",
                "category": "Samples",
                "functionAlias": "Infoblox_dnsgss",
                "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"gss_accept_sec_context\"\r\n     | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n             Log_Type = tostring(Parser[1]),\r\n             RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;  \r\nRawData\r\n    | extend dnsgss = extract_all(@\":\\s(.*)\", dynamic([1,2]), RawData_subString)[0]\r\n    | extend EventMessage = tostring(dnsgss[0])\r\n    | project-away dnsgss, SyslogMessage,RawData_subString;",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox_dnsgss"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId21'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName21')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName21'))]",
                "contentId": "[variables('_parserContentId21')]",
                "kind": "Parser",
                "version": "[variables('parserVersion21')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId21')]",
        "contentKind": "Parser",
        "displayName": "Infoblox_dnsgss",
        "contentProductId": "[variables('_parsercontentProductId21')]",
        "id": "[variables('_parsercontentProductId21')]",
        "version": "[variables('parserVersion21')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName21')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox_dnsgss",
        "category": "Samples",
        "functionAlias": "Infoblox_dnsgss",
        "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"gss_accept_sec_context\"\r\n     | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n             Log_Type = tostring(Parser[1]),\r\n             RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;  \r\nRawData\r\n    | extend dnsgss = extract_all(@\":\\s(.*)\", dynamic([1,2]), RawData_subString)[0]\r\n    | extend EventMessage = tostring(dnsgss[0])\r\n    | project-away dnsgss, SyslogMessage,RawData_subString;",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox_dnsgss"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId21'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId21')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName21'))]",
        "contentId": "[variables('_parserContentId21')]",
        "kind": "Parser",
        "version": "[variables('parserVersion21')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserTemplateSpecName22')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Infoblox_dnszone Data Parser with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserVersion22')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('_parserName22')]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Infoblox_dnszone",
                "category": "Samples",
                "functionAlias": "Infoblox_dnszone",
                "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"zone\"\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n             Log_Type = tostring(Parser[1]),\r\n             RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;  \r\nRawData\r\n    | extend dnszone = extract_all(@\"([a-z0-9\\.\\-]+)\\/([A-Z]+)\\:(\\s[A-Z]+)?\\s(\\w+\\s\\w+)\\s(for\\s\\'(\\S+)?\\':)?((\\d+)\\.?)?(\\s(\\with\\s|(\\d+)\\sIN\\s)([A-Z]+)\\s)?(\\(?serial\\s(\\d+)\\)?)?(.*)\", dynamic([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]), RawData_subString)[0]\r\n    | extend Zone = tostring(dnszone[0]),\r\n        DvcAction = tostring(dnszone[3]),\r\n        SrcHostname = tostring(dnszone[5]),\r\n        TransactionIdHex = tostring(dnszone[7]),\r\n        Serial = tostring(dnszone[13]),\r\n        TTL = tostring(dnszone[10]),\r\n        DnsQueryType = tostring(dnszone[11])\r\n    | extend dnszone_substring = extract_all(@\"\\s?([a-zA-Z0-9\\.\\-\\_]+)\\.\\s(.*)\", dynamic([1,2]),tostring(dnszone[14]))[0]\r\n    | extend Src = tostring(dnszone_substring[0]),\r\n        EventMessage = tostring(dnszone_substring[1])\r\n    | project-away SyslogMessage, dnszone_substring, dnszone,RawData_subString;",
                "functionParameters": "",
                "version": 1,
                "tags": [
                  {
                    "name": "description",
                    "value": "Infoblox_dnszone"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId22'),'/'))))]",
              "dependsOn": [
                "[variables('_parserName22')]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName22'))]",
                "contentId": "[variables('_parserContentId22')]",
                "kind": "Parser",
                "version": "[variables('parserVersion22')]",
                "source": {
                  "name": "Infoblox NIOS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_parserContentId22')]",
        "contentKind": "Parser",
        "displayName": "Infoblox_dnszone",
        "contentProductId": "[variables('_parsercontentProductId22')]",
        "id": "[variables('_parsercontentProductId22')]",
        "version": "[variables('parserVersion22')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('_parserName22')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Infoblox_dnszone",
        "category": "Samples",
        "functionAlias": "Infoblox_dnszone",
        "query": "\nlet datasource = (_GetWatchlist('Sources_by_SourceType')| where SearchKey == 'InfobloxNIOS' | project Source);\r\nlet RawData = Syslog\r\n    | where Computer in (datasource)\r\n    | where SyslogMessage has \"zone\"\r\n    | extend Parser = extract_all(@\"^(\\d{2}\\-[a-zA-Z]{3}\\-\\d{4}\\s[0-9\\.\\:]+)?\\s?([a-zA-Z-_]+)(\\s|\\:)?(.*)\", dynamic([1,2,3,4]), SyslogMessage)[0]\r\n    | extend responseTime = todatetime(Parser[0]),\r\n             Log_Type = tostring(Parser[1]),\r\n             RawData_subString = tostring(Parser[3])\r\n    | project-away Parser;  \r\nRawData\r\n    | extend dnszone = extract_all(@\"([a-z0-9\\.\\-]+)\\/([A-Z]+)\\:(\\s[A-Z]+)?\\s(\\w+\\s\\w+)\\s(for\\s\\'(\\S+)?\\':)?((\\d+)\\.?)?(\\s(\\with\\s|(\\d+)\\sIN\\s)([A-Z]+)\\s)?(\\(?serial\\s(\\d+)\\)?)?(.*)\", dynamic([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]), RawData_subString)[0]\r\n    | extend Zone = tostring(dnszone[0]),\r\n        DvcAction = tostring(dnszone[3]),\r\n        SrcHostname = tostring(dnszone[5]),\r\n        TransactionIdHex = tostring(dnszone[7]),\r\n        Serial = tostring(dnszone[13]),\r\n        TTL = tostring(dnszone[10]),\r\n        DnsQueryType = tostring(dnszone[11])\r\n    | extend dnszone_substring = extract_all(@\"\\s?([a-zA-Z0-9\\.\\-\\_]+)\\.\\s(.*)\", dynamic([1,2]),tostring(dnszone[14]))[0]\r\n    | extend Src = tostring(dnszone_substring[0]),\r\n        EventMessage = tostring(dnszone_substring[1])\r\n    | project-away SyslogMessage, dnszone_substring, dnszone,RawData_subString;",
        "functionParameters": "",
        "version": 1,
        "tags": [
          {
            "name": "description",
            "value": "Infoblox_dnszone"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('_parserId22'),'/'))))]",
      "dependsOn": [
        "[variables('_parserId22')]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), variables('parserName22'))]",
        "contentId": "[variables('_parserContentId22')]",
        "kind": "Parser",
        "version": "[variables('parserVersion22')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "ExcessiveNXDOMAINDNSQueries_AnalyticalRules Analytics Rule with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRulecontentId1')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This creates an incident in the event a client generates excessive amounts of DNS queries for non-existent domains.",
                "displayName": "Excessive NXDOMAIN DNS Queries",
                "enabled": false,
                "query": "let threshold = 200;\nInfoblox_dnsclient\n| where isnotempty(DnsResponseCode)\n| where DnsResponseCode =~ \"NXDOMAIN\"\n| summarize count() by SrcIpAddr, bin(TimeGenerated,15m)\n| where count_ > threshold\n| join kind=inner (Infoblox_dnsclient\n    | where isnotempty(DnsResponseCode)\n    | where DnsResponseCode =~ \"NXDOMAIN\"\n    ) on SrcIpAddr\n| extend timestamp = TimeGenerated, IPCustomEntity = SrcIpAddr\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "InfobloxNIOS"
                  }
                ],
                "tactics": [
                  "CommandAndControl"
                ],
                "techniques": [
                  "T1568",
                  "T1008"
                ],
                "entityMappings": [
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "columnName": "IPCustomEntity",
                        "identifier": "Address"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId1'),'/'))))]",
              "properties": {
                "description": "Infoblox NIOS Analytics Rule 1",
                "parentId": "[variables('analyticRuleId1')]",
                "contentId": "[variables('_analyticRulecontentId1')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Infoblox NIOS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_analyticRulecontentId1')]",
        "contentKind": "AnalyticsRule",
        "displayName": "Excessive NXDOMAIN DNS Queries",
        "contentProductId": "[variables('_analyticRulecontentProductId1')]",
        "id": "[variables('_analyticRulecontentProductId1')]",
        "version": "[variables('analyticRuleVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "PotentialDHCPStarvationAttack_AnalyticalRules Analytics Rule with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRulecontentId2')]",
              "apiVersion": "2022-04-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This creates an incident in the event that an excessive amount of DHCPREQUEST have been recieved by a DHCP Server and could potentially be an indication of a DHCP Starvation Attack.",
                "displayName": "Potential DHCP Starvation Attack",
                "enabled": false,
                "query": "let threshold = 1000;\nInfoblox\n| where ProcessName =~ \"dhcpd\" and Log_Type =~ \"DHCPREQUEST\"\n| summarize count() by SrcIpAddr, bin(TimeGenerated,5m)\n| where count_ > threshold\n| join kind=inner (Infoblox\n    | where ProcessName =~ \"dhcpd\" and Log_Type =~ \"DHCPREQUEST\"\n    ) on SrcIpAddr\n| extend timestamp = TimeGenerated, IPCustomEntity = SrcIpAddr\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "InfobloxNIOS"
                  }
                ],
                "tactics": [
                  "InitialAccess"
                ],
                "techniques": [
                  "T1200"
                ],
                "entityMappings": [
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "columnName": "IPCustomEntity",
                        "identifier": "Address"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleId2'),'/'))))]",
              "properties": {
                "description": "Infoblox NIOS Analytics Rule 2",
                "parentId": "[variables('analyticRuleId2')]",
                "contentId": "[variables('_analyticRulecontentId2')]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Infoblox NIOS",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Infoblox"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_analyticRulecontentId2')]",
        "contentKind": "AnalyticsRule",
        "displayName": "Potential DHCP Starvation Attack",
        "contentProductId": "[variables('_analyticRulecontentProductId2')]",
        "id": "[variables('_analyticRulecontentProductId2')]",
        "version": "[variables('analyticRuleVersion2')]"
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist1-id'))]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "kind": "",
      "properties": {
        "displayName": "Sources_by_SourceType",
        "source": "Sources_by_SourceType.csv",
        "description": "The watchlist is used by parsers to specify Sources and their types.",
        "provider": "Custom",
        "isDeleted": false,
        "defaultDuration": "P1000Y",
        "contentType": "Text/Csv",
        "numberOfLinesToSkip": 0,
        "itemsSearchKey": "SourceType",
        "rawContent": "SourceType,Source\r\nContosoDns,contoso_machine1"
      },
      "apiVersion": "2021-04-01"
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.2",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Infoblox NIOS",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> <em>There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</em></p>\n<p>The <a href=\"https://www.infoblox.com/glossary/network-identity-operating-system-nios/\">Infoblox Network Identity Operating System (NIOS)</a> solution for Microsoft Sentinel enables you to easily connect your Infoblox NIOS logs with Microsoft Sentinel, to view dashboards, create custom alerts, and improve investigation. This gives you more insight into your organization's network and improves your security operation capabilities.</p>\n<p><strong>Underlying Microsoft Technologies used:</strong></p>\n<p>This solution takes a dependency on the following technologies, and some of these dependencies either may be in <a href=\"https://azure.microsoft.com/support/legal/preview-supplemental-terms/\">Preview</a> state or might result in additional ingestion or operational costs:</p>\n<ol type=\"a\">\n<li><a href=\"https://docs.microsoft.com/azure/sentinel/connect-syslog\">Agent-based log collection (Syslog)</a></li>\n</ol>\n<p><strong>Data Connectors:</strong> 1, <strong>Parsers:</strong> 22, <strong>Workbooks:</strong> 1, <strong>Analytic Rules:</strong> 2, <strong>Watchlists:</strong> 1</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/infoblox_logo.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Infoblox NIOS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Infoblox"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId1')]",
              "version": "[variables('parserVersion1')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId2')]",
              "version": "[variables('parserVersion2')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId3')]",
              "version": "[variables('parserVersion3')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId4')]",
              "version": "[variables('parserVersion4')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId5')]",
              "version": "[variables('parserVersion5')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId6')]",
              "version": "[variables('parserVersion6')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId7')]",
              "version": "[variables('parserVersion7')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId8')]",
              "version": "[variables('parserVersion8')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId9')]",
              "version": "[variables('parserVersion9')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId10')]",
              "version": "[variables('parserVersion10')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId11')]",
              "version": "[variables('parserVersion11')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId12')]",
              "version": "[variables('parserVersion12')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId13')]",
              "version": "[variables('parserVersion13')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId14')]",
              "version": "[variables('parserVersion14')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId15')]",
              "version": "[variables('parserVersion15')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId16')]",
              "version": "[variables('parserVersion16')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId17')]",
              "version": "[variables('parserVersion17')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId18')]",
              "version": "[variables('parserVersion18')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId19')]",
              "version": "[variables('parserVersion19')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId20')]",
              "version": "[variables('parserVersion20')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId21')]",
              "version": "[variables('parserVersion21')]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_parserContentId22')]",
              "version": "[variables('parserVersion22')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId1')]",
              "version": "[variables('analyticRuleVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRulecontentId2')]",
              "version": "[variables('analyticRuleVersion2')]"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_Sources_by_SourceType')]",
              "version": "3.0.2"
            }
          ]
        },
        "firstPublishDate": "2022-04-01",
        "providers": [
          "Infoblox"
        ],
        "categories": {
          "domains": [
            "Networking",
            "Security - Network"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
